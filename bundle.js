(()=>{var t={478:(t,e,n)=>{"use strict";t.exports=function(t,e){t=t||document.body;var n=[.01,1/0];"distanceLimits"in(e=e||{})&&(n[0]=e.distanceLimits[0],n[1]=e.distanceLimits[1]),"zoomMin"in e&&(n[0]=e.zoomMin),"zoomMax"in e&&(n[1]=e.zoomMax);var u=r({center:e.center||[0,0,0],up:e.up||[0,1,0],eye:e.eye||[0,0,10],mode:e.mode||"orbit",distanceLimits:n}),h=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],d=0,f=t.clientWidth,l=t.clientHeight,m={view:u,element:t,delay:e.delay||16,rotateSpeed:e.rotateSpeed||1,zoomSpeed:e.zoomSpeed||1,translateSpeed:e.translateSpeed||1,flipX:!!e.flipX,flipY:!!e.flipY,modes:u.modes,tick:function(){var e=i(),n=this.delay;u.idle(e-n),u.flush(e-(100+2*n));var r=e-2*n;u.recalcMatrix(r);for(var o=!0,a=u.computedMatrix,s=0;s<16;++s)o=o&&h[s]===a[s],h[s]=a[s];var c=t.clientWidth===f&&t.clientHeight===l;return f=t.clientWidth,l=t.clientHeight,o?!c:(d=Math.exp(u.computedRadius[0]),!0)},lookAt:function(t,e,n){u.lookAt(u.lastT(),t,e,n)},rotate:function(t,e,n){u.rotate(u.lastT(),t,e,n)},pan:function(t,e,n){u.pan(u.lastT(),t,e,n)},translate:function(t,e,n){u.translate(u.lastT(),t,e,n)}};Object.defineProperties(m,{matrix:{get:function(){return u.computedMatrix},set:function(t){return u.setMatrix(u.lastT(),t),u.computedMatrix},enumerable:!0},mode:{get:function(){return u.getMode()},set:function(t){return u.setMode(t),u.getMode()},enumerable:!0},center:{get:function(){return u.computedCenter},set:function(t){return u.lookAt(u.lastT(),t),u.computedCenter},enumerable:!0},eye:{get:function(){return u.computedEye},set:function(t){return u.lookAt(u.lastT(),null,t),u.computedEye},enumerable:!0},up:{get:function(){return u.computedUp},set:function(t){return u.lookAt(u.lastT(),null,null,t),u.computedUp},enumerable:!0},distance:{get:function(){return d},set:function(t){return u.setDistance(u.lastT(),t),t},enumerable:!0},distanceLimits:{get:function(){return u.getDistanceLimits(n)},set:function(t){return u.setDistanceLimits(t),t},enumerable:!0}}),t.addEventListener("contextmenu",(function(t){return t.preventDefault(),!1}));var v=0,p=0,g={shift:!1,control:!1,alt:!1,meta:!1};function y(e,n,r,o){var a=1/t.clientHeight,s=a*(n-v),c=a*(r-p),h=m.flipX?1:-1,f=m.flipY?1:-1,l=Math.PI*m.rotateSpeed,y=i();if(1&e)o.shift?u.rotate(y,0,0,-s*l):u.rotate(y,h*l*s,-f*l*c,0);else if(2&e)u.pan(y,-m.translateSpeed*s*d,m.translateSpeed*c*d,0);else if(4&e){var x=m.zoomSpeed*c/window.innerHeight*(y-u.lastT())*50;u.pan(y,0,0,d*(Math.exp(x)-1))}v=n,p=r,g=o}return o(t,y),t.addEventListener("touchstart",(function(e){var n=s(e.changedTouches[0],t);y(0,n[0],n[1],g),y(1,n[0],n[1],g),e.preventDefault()}),!!c&&{passive:!1}),t.addEventListener("touchmove",(function(e){var n=s(e.changedTouches[0],t);y(1,n[0],n[1],g),e.preventDefault()}),!!c&&{passive:!1}),t.addEventListener("touchend",(function(e){s(e.changedTouches[0],t),y(0,v,p,g),e.preventDefault()}),!!c&&{passive:!1}),a(t,(function(t,e,n){var r=m.flipX?1:-1,o=m.flipY?1:-1,a=i();if(Math.abs(t)>Math.abs(e))u.rotate(a,0,0,-t*r*Math.PI*m.rotateSpeed/window.innerWidth);else{var s=m.zoomSpeed*o*e/window.innerHeight*(a-u.lastT())/100;u.pan(a,0,0,d*(Math.exp(s)-1))}}),!0),m};var i=n(698),r=n(991),o=n(685),a=n(232),s=n(675),c=n(795)},991:(t,e,n)=>{"use strict";t.exports=function(t){var e=(t=t||{}).eye||[0,0,1],n=t.center||[0,0,0],s=t.up||[0,1,0],c=t.distanceLimits||[0,1/0],u=t.mode||"turntable",h=i(),d=r(),f=o();return h.setDistanceLimits(c[0],c[1]),h.lookAt(0,e,n,s),d.setDistanceLimits(c[0],c[1]),d.lookAt(0,e,n,s),f.setDistanceLimits(c[0],c[1]),f.lookAt(0,e,n,s),new a({turntable:h,orbit:d,matrix:f},u)};var i=n(786),r=n(809),o=n(622);function a(t,e){this._controllerNames=Object.keys(t),this._controllerList=this._controllerNames.map((function(e){return t[e]})),this._mode=e,this._active=t[e],this._active||(this._mode="turntable",this._active=t.turntable),this.modes=this._controllerNames,this.computedMatrix=this._active.computedMatrix,this.computedEye=this._active.computedEye,this.computedUp=this._active.computedUp,this.computedCenter=this._active.computedCenter,this.computedRadius=this._active.computedRadius}var s=a.prototype;s.flush=function(t){for(var e=this._controllerList,n=0;n<e.length;++n)e[n].flush(t)},s.idle=function(t){for(var e=this._controllerList,n=0;n<e.length;++n)e[n].idle(t)},s.lookAt=function(t,e,n,i){for(var r=this._controllerList,o=0;o<r.length;++o)r[o].lookAt(t,e,n,i)},s.rotate=function(t,e,n,i){for(var r=this._controllerList,o=0;o<r.length;++o)r[o].rotate(t,e,n,i)},s.pan=function(t,e,n,i){for(var r=this._controllerList,o=0;o<r.length;++o)r[o].pan(t,e,n,i)},s.translate=function(t,e,n,i){for(var r=this._controllerList,o=0;o<r.length;++o)r[o].translate(t,e,n,i)},s.setMatrix=function(t,e){for(var n=this._controllerList,i=0;i<n.length;++i)n[i].setMatrix(t,e)},s.setDistanceLimits=function(t,e){for(var n=this._controllerList,i=0;i<n.length;++i)n[i].setDistanceLimits(t,e)},s.setDistance=function(t,e){for(var n=this._controllerList,i=0;i<n.length;++i)n[i].setDistance(t,e)},s.recalcMatrix=function(t){this._active.recalcMatrix(t)},s.getDistance=function(t){return this._active.getDistance(t)},s.getDistanceLimits=function(t){return this._active.getDistanceLimits(t)},s.lastT=function(){return this._active.lastT()},s.setMode=function(t){if(t!==this._mode){var e=this._controllerNames.indexOf(t);if(!(e<0)){var n=this._active,i=this._controllerList[e],r=Math.max(n.lastT(),i.lastT());n.recalcMatrix(r),i.setMatrix(r,n.computedMatrix),this._active=i,this._mode=t,this.computedMatrix=this._active.computedMatrix,this.computedEye=this._active.computedEye,this.computedUp=this._active.computedUp,this.computedCenter=this._active.computedCenter,this.computedRadius=this._active.computedRadius}}},s.getMode=function(){return this._mode}},76:t=>{"use strict";function e(t,e,n,i,r){for(var o=r+1;i<=r;){var a=i+r>>>1,s=t[a];(void 0!==n?n(s,e):s-e)>=0?(o=a,r=a-1):i=a+1}return o}function n(t,e,n,i,r){for(var o=r+1;i<=r;){var a=i+r>>>1,s=t[a];(void 0!==n?n(s,e):s-e)>0?(o=a,r=a-1):i=a+1}return o}function i(t,e,n,i,r){for(var o=i-1;i<=r;){var a=i+r>>>1,s=t[a];(void 0!==n?n(s,e):s-e)<0?(o=a,i=a+1):r=a-1}return o}function r(t,e,n,i,r){for(var o=i-1;i<=r;){var a=i+r>>>1,s=t[a];(void 0!==n?n(s,e):s-e)<=0?(o=a,i=a+1):r=a-1}return o}function o(t,e,n,i,r){for(;i<=r;){var o=i+r>>>1,a=t[o],s=void 0!==n?n(a,e):a-e;if(0===s)return o;s<=0?i=o+1:r=o-1}return-1}function a(t,e,n,i,r,o){return"function"==typeof n?o(t,e,n,void 0===i?0:0|i,void 0===r?t.length-1:0|r):o(t,e,void 0,void 0===n?0:0|n,void 0===i?t.length-1:0|i)}t.exports={ge:function(t,n,i,r,o){return a(t,n,i,r,o,e)},gt:function(t,e,i,r,o){return a(t,e,i,r,o,n)},lt:function(t,e,n,r,o){return a(t,e,n,r,o,i)},le:function(t,e,n,i,o){return a(t,e,n,i,o,r)},eq:function(t,e,n,i,r){return a(t,e,n,i,r,o)}}},617:t=>{"use strict";t.exports=function(t,e,n,i,r,o){var a=r-1,s=r*r,c=a*a,u=(1+2*r)*c,h=r*c,d=s*(3-2*r),f=s*a;if(t.length){o||(o=new Array(t.length));for(var l=t.length-1;l>=0;--l)o[l]=u*t[l]+h*e[l]+d*n[l]+f*i[l];return o}return u*t+h*e+d*n+f*i},t.exports.derivative=function(t,e,n,i,r,o){var a=6*r*r-6*r,s=3*r*r-4*r+1,c=-6*r*r+6*r,u=3*r*r-2*r;if(t.length){o||(o=new Array(t.length));for(var h=t.length-1;h>=0;--h)o[h]=a*t[h]+s*e[h]+c*n[h]+u*i[h];return o}return a*t+s*e+c*n[h]+u*i}},173:(t,e,n)=>{"use strict";t.exports=function(t,e,n){switch(arguments.length){case 0:return new a([0],[0],0);case 1:return"number"==typeof t?new a(i=c(t),i,0):new a(t,c(t.length),0);case 2:if("number"==typeof e){var i=c(t.length);return new a(t,i,+e)}n=0;case 3:if(t.length!==e.length)throw new Error("state and velocity lengths must match");return new a(t,e,n)}};var i=n(617),r=n(76);function o(t,e,n){return Math.min(e,Math.max(t,n))}function a(t,e,n){this.dimension=t.length,this.bounds=[new Array(this.dimension),new Array(this.dimension)];for(var i=0;i<this.dimension;++i)this.bounds[0][i]=-1/0,this.bounds[1][i]=1/0;this._state=t.slice().reverse(),this._velocity=e.slice().reverse(),this._time=[n],this._scratch=[t.slice(),t.slice(),t.slice(),t.slice(),t.slice()]}var s=a.prototype;function c(t){for(var e=new Array(t),n=0;n<t;++n)e[n]=0;return e}s.flush=function(t){var e=r.gt(this._time,t)-1;e<=0||(this._time.splice(0,e),this._state.splice(0,e*this.dimension),this._velocity.splice(0,e*this.dimension))},s.curve=function(t){var e=this._time,n=e.length,a=r.le(e,t),s=this._scratch[0],c=this._state,u=this._velocity,h=this.dimension,d=this.bounds;if(a<0)for(var f=h-1,l=0;l<h;++l,--f)s[l]=c[f];else if(a>=n-1){f=c.length-1;var m=t-e[n-1];for(l=0;l<h;++l,--f)s[l]=c[f]+m*u[f]}else{f=h*(a+1)-1;var v=e[a],p=e[a+1]-v||1,g=this._scratch[1],y=this._scratch[2],x=this._scratch[3],w=this._scratch[4],M=!0;for(l=0;l<h;++l,--f)g[l]=c[f],x[l]=u[f]*p,y[l]=c[f+h],w[l]=u[f+h]*p,M=M&&g[l]===y[l]&&x[l]===w[l]&&0===x[l];if(M)for(l=0;l<h;++l)s[l]=g[l];else i(g,x,y,w,(t-v)/p,s)}var _=d[0],S=d[1];for(l=0;l<h;++l)s[l]=o(_[l],S[l],s[l]);return s},s.dcurve=function(t){var e=this._time,n=e.length,o=r.le(e,t),a=this._scratch[0],s=this._state,c=this._velocity,u=this.dimension;if(o>=n-1)for(var h=s.length-1,d=(e[n-1],0);d<u;++d,--h)a[d]=c[h];else{h=u*(o+1)-1;var f=e[o],l=e[o+1]-f||1,m=this._scratch[1],v=this._scratch[2],p=this._scratch[3],g=this._scratch[4],y=!0;for(d=0;d<u;++d,--h)m[d]=s[h],p[d]=c[h]*l,v[d]=s[h+u],g[d]=c[h+u]*l,y=y&&m[d]===v[d]&&p[d]===g[d]&&0===p[d];if(y)for(d=0;d<u;++d)a[d]=0;else for(i.derivative(m,p,v,g,(t-f)/l,a),d=0;d<u;++d)a[d]/=l}return a},s.lastT=function(){var t=this._time;return t[t.length-1]},s.stable=function(){for(var t=this._velocity,e=t.length,n=this.dimension-1;n>=0;--n)if(t[--e])return!1;return!0},s.jump=function(t){var e=this.lastT(),n=this.dimension;if(!(t<e||arguments.length!==n+1)){var i=this._state,r=this._velocity,a=i.length-this.dimension,s=this.bounds,c=s[0],u=s[1];this._time.push(e,t);for(var h=0;h<2;++h)for(var d=0;d<n;++d)i.push(i[a++]),r.push(0);for(this._time.push(t),d=n;d>0;--d)i.push(o(c[d-1],u[d-1],arguments[d])),r.push(0)}},s.push=function(t){var e=this.lastT(),n=this.dimension;if(!(t<e||arguments.length!==n+1)){var i=this._state,r=this._velocity,a=i.length-this.dimension,s=t-e,c=this.bounds,u=c[0],h=c[1],d=s>1e-6?1/s:0;this._time.push(t);for(var f=n;f>0;--f){var l=o(u[f-1],h[f-1],arguments[f]);i.push(l),r.push((l-i[a++])*d)}}},s.set=function(t){var e=this.dimension;if(!(t<this.lastT()||arguments.length!==e+1)){var n=this._state,i=this._velocity,r=this.bounds,a=r[0],s=r[1];this._time.push(t);for(var c=e;c>0;--c)n.push(o(a[c-1],s[c-1],arguments[c])),i.push(0)}},s.move=function(t){var e=this.lastT(),n=this.dimension;if(!(t<=e||arguments.length!==n+1)){var i=this._state,r=this._velocity,a=i.length-this.dimension,s=this.bounds,c=s[0],u=s[1],h=t-e,d=h>1e-6?1/h:0;this._time.push(t);for(var f=n;f>0;--f){var l=arguments[f];i.push(o(c[f-1],u[f-1],i[a++]+l)),r.push(l*d)}}},s.idle=function(t){var e=this.lastT();if(!(t<e)){var n=this.dimension,i=this._state,r=this._velocity,a=i.length-n,s=this.bounds,c=s[0],u=s[1],h=t-e;this._time.push(t);for(var d=n-1;d>=0;--d)i.push(o(c[d],u[d],i[a]+h*r[a])),r.push(0),a+=1}}},447:t=>{t.exports=function(t){var e=new Float32Array(16);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e}},252:t=>{t.exports=function(){var t=new Float32Array(16);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}},594:t=>{t.exports=function(t){var e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],s=t[6],c=t[7],u=t[8],h=t[9],d=t[10],f=t[11],l=t[12],m=t[13],v=t[14],p=t[15];return(e*a-n*o)*(d*p-f*v)-(e*s-i*o)*(h*p-f*m)+(e*c-r*o)*(h*v-d*m)+(n*s-i*a)*(u*p-f*l)-(n*c-r*a)*(u*v-d*l)+(i*c-r*s)*(u*m-h*l)}},127:t=>{t.exports=function(t,e){var n=e[0],i=e[1],r=e[2],o=e[3],a=n+n,s=i+i,c=r+r,u=n*a,h=i*a,d=i*s,f=r*a,l=r*s,m=r*c,v=o*a,p=o*s,g=o*c;return t[0]=1-d-m,t[1]=h+g,t[2]=f-p,t[3]=0,t[4]=h-g,t[5]=1-u-m,t[6]=l+v,t[7]=0,t[8]=f+p,t[9]=l-v,t[10]=1-u-d,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}},872:t=>{t.exports=function(t,e,n){var i=e[0],r=e[1],o=e[2],a=e[3],s=i+i,c=r+r,u=o+o,h=i*s,d=i*c,f=i*u,l=r*c,m=r*u,v=o*u,p=a*s,g=a*c,y=a*u;return t[0]=1-(l+v),t[1]=d+y,t[2]=f-g,t[3]=0,t[4]=d-y,t[5]=1-(h+v),t[6]=m+p,t[7]=0,t[8]=f+g,t[9]=m-p,t[10]=1-(h+l),t[11]=0,t[12]=n[0],t[13]=n[1],t[14]=n[2],t[15]=1,t}},312:t=>{t.exports=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}},481:t=>{t.exports=function(t,e){var n=e[0],i=e[1],r=e[2],o=e[3],a=e[4],s=e[5],c=e[6],u=e[7],h=e[8],d=e[9],f=e[10],l=e[11],m=e[12],v=e[13],p=e[14],g=e[15],y=n*s-i*a,x=n*c-r*a,w=n*u-o*a,M=i*c-r*s,_=i*u-o*s,S=r*u-o*c,b=h*v-d*m,I=h*p-f*m,D=h*g-l*m,C=d*p-f*v,P=d*g-l*v,E=f*g-l*p,L=y*E-x*P+w*C+M*D-_*I+S*b;return L?(L=1/L,t[0]=(s*E-c*P+u*C)*L,t[1]=(r*P-i*E-o*C)*L,t[2]=(v*S-p*_+g*M)*L,t[3]=(f*_-d*S-l*M)*L,t[4]=(c*D-a*E-u*I)*L,t[5]=(n*E-r*D+o*I)*L,t[6]=(p*w-m*S-g*x)*L,t[7]=(h*S-f*w+l*x)*L,t[8]=(a*P-s*D+u*b)*L,t[9]=(i*D-n*P-o*b)*L,t[10]=(m*_-v*w+g*y)*L,t[11]=(d*w-h*_-l*y)*L,t[12]=(s*I-a*C-c*b)*L,t[13]=(n*C-i*I+r*b)*L,t[14]=(v*x-m*M-p*y)*L,t[15]=(h*M-d*x+f*y)*L,t):null}},727:(t,e,n)=>{var i=n(312);t.exports=function(t,e,n,r){var o,a,s,c,u,h,d,f,l,m,v=e[0],p=e[1],g=e[2],y=r[0],x=r[1],w=r[2],M=n[0],_=n[1],S=n[2];return Math.abs(v-M)<1e-6&&Math.abs(p-_)<1e-6&&Math.abs(g-S)<1e-6?i(t):(d=v-M,f=p-_,l=g-S,o=x*(l*=m=1/Math.sqrt(d*d+f*f+l*l))-w*(f*=m),a=w*(d*=m)-y*l,s=y*f-x*d,(m=Math.sqrt(o*o+a*a+s*s))?(o*=m=1/m,a*=m,s*=m):(o=0,a=0,s=0),c=f*s-l*a,u=l*o-d*s,h=d*a-f*o,(m=Math.sqrt(c*c+u*u+h*h))?(c*=m=1/m,u*=m,h*=m):(c=0,u=0,h=0),t[0]=o,t[1]=c,t[2]=d,t[3]=0,t[4]=a,t[5]=u,t[6]=f,t[7]=0,t[8]=s,t[9]=h,t[10]=l,t[11]=0,t[12]=-(o*v+a*p+s*g),t[13]=-(c*v+u*p+h*g),t[14]=-(d*v+f*p+l*g),t[15]=1,t)}},401:t=>{t.exports=function(t,e,n){var i=e[0],r=e[1],o=e[2],a=e[3],s=e[4],c=e[5],u=e[6],h=e[7],d=e[8],f=e[9],l=e[10],m=e[11],v=e[12],p=e[13],g=e[14],y=e[15],x=n[0],w=n[1],M=n[2],_=n[3];return t[0]=x*i+w*s+M*d+_*v,t[1]=x*r+w*c+M*f+_*p,t[2]=x*o+w*u+M*l+_*g,t[3]=x*a+w*h+M*m+_*y,x=n[4],w=n[5],M=n[6],_=n[7],t[4]=x*i+w*s+M*d+_*v,t[5]=x*r+w*c+M*f+_*p,t[6]=x*o+w*u+M*l+_*g,t[7]=x*a+w*h+M*m+_*y,x=n[8],w=n[9],M=n[10],_=n[11],t[8]=x*i+w*s+M*d+_*v,t[9]=x*r+w*c+M*f+_*p,t[10]=x*o+w*u+M*l+_*g,t[11]=x*a+w*h+M*m+_*y,x=n[12],w=n[13],M=n[14],_=n[15],t[12]=x*i+w*s+M*d+_*v,t[13]=x*r+w*c+M*f+_*p,t[14]=x*o+w*u+M*l+_*g,t[15]=x*a+w*h+M*m+_*y,t}},397:t=>{t.exports=function(t,e,n,i){var r,o,a,s,c,u,h,d,f,l,m,v,p,g,y,x,w,M,_,S,b,I,D,C,P=i[0],E=i[1],L=i[2],T=Math.sqrt(P*P+E*E+L*L);return Math.abs(T)<1e-6?null:(P*=T=1/T,E*=T,L*=T,r=Math.sin(n),a=1-(o=Math.cos(n)),s=e[0],c=e[1],u=e[2],h=e[3],d=e[4],f=e[5],l=e[6],m=e[7],v=e[8],p=e[9],g=e[10],y=e[11],x=P*P*a+o,w=E*P*a+L*r,M=L*P*a-E*r,_=P*E*a-L*r,S=E*E*a+o,b=L*E*a+P*r,I=P*L*a+E*r,D=E*L*a-P*r,C=L*L*a+o,t[0]=s*x+d*w+v*M,t[1]=c*x+f*w+p*M,t[2]=u*x+l*w+g*M,t[3]=h*x+m*w+y*M,t[4]=s*_+d*S+v*b,t[5]=c*_+f*S+p*b,t[6]=u*_+l*S+g*b,t[7]=h*_+m*S+y*b,t[8]=s*I+d*D+v*C,t[9]=c*I+f*D+p*C,t[10]=u*I+l*D+g*C,t[11]=h*I+m*D+y*C,e!==t&&(t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t)}},663:t=>{t.exports=function(t,e,n){var i=Math.sin(n),r=Math.cos(n),o=e[4],a=e[5],s=e[6],c=e[7],u=e[8],h=e[9],d=e[10],f=e[11];return e!==t&&(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[4]=o*r+u*i,t[5]=a*r+h*i,t[6]=s*r+d*i,t[7]=c*r+f*i,t[8]=u*r-o*i,t[9]=h*r-a*i,t[10]=d*r-s*i,t[11]=f*r-c*i,t}},113:t=>{t.exports=function(t,e,n){var i=Math.sin(n),r=Math.cos(n),o=e[0],a=e[1],s=e[2],c=e[3],u=e[8],h=e[9],d=e[10],f=e[11];return e!==t&&(t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=o*r-u*i,t[1]=a*r-h*i,t[2]=s*r-d*i,t[3]=c*r-f*i,t[8]=o*i+u*r,t[9]=a*i+h*r,t[10]=s*i+d*r,t[11]=c*i+f*r,t}},974:t=>{t.exports=function(t,e,n){var i=Math.sin(n),r=Math.cos(n),o=e[0],a=e[1],s=e[2],c=e[3],u=e[4],h=e[5],d=e[6],f=e[7];return e!==t&&(t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=o*r+u*i,t[1]=a*r+h*i,t[2]=s*r+d*i,t[3]=c*r+f*i,t[4]=u*r-o*i,t[5]=h*r-a*i,t[6]=d*r-s*i,t[7]=f*r-c*i,t}},28:t=>{t.exports=function(t,e,n){var i=n[0],r=n[1],o=n[2];return t[0]=e[0]*i,t[1]=e[1]*i,t[2]=e[2]*i,t[3]=e[3]*i,t[4]=e[4]*r,t[5]=e[5]*r,t[6]=e[6]*r,t[7]=e[7]*r,t[8]=e[8]*o,t[9]=e[9]*o,t[10]=e[10]*o,t[11]=e[11]*o,t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t}},602:t=>{t.exports=function(t,e,n){var i,r,o,a,s,c,u,h,d,f,l,m,v=n[0],p=n[1],g=n[2];return e===t?(t[12]=e[0]*v+e[4]*p+e[8]*g+e[12],t[13]=e[1]*v+e[5]*p+e[9]*g+e[13],t[14]=e[2]*v+e[6]*p+e[10]*g+e[14],t[15]=e[3]*v+e[7]*p+e[11]*g+e[15]):(i=e[0],r=e[1],o=e[2],a=e[3],s=e[4],c=e[5],u=e[6],h=e[7],d=e[8],f=e[9],l=e[10],m=e[11],t[0]=i,t[1]=r,t[2]=o,t[3]=a,t[4]=s,t[5]=c,t[6]=u,t[7]=h,t[8]=d,t[9]=f,t[10]=l,t[11]=m,t[12]=i*v+s*p+d*g+e[12],t[13]=r*v+c*p+f*g+e[13],t[14]=o*v+u*p+l*g+e[14],t[15]=a*v+h*p+m*g+e[15]),t}},683:t=>{t.exports=function(t,e){if(t===e){var n=e[1],i=e[2],r=e[3],o=e[6],a=e[7],s=e[11];t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=n,t[6]=e[9],t[7]=e[13],t[8]=i,t[9]=o,t[11]=e[14],t[12]=r,t[13]=a,t[14]=s}else t[0]=e[0],t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=e[1],t[5]=e[5],t[6]=e[9],t[7]=e[13],t[8]=e[2],t[9]=e[6],t[10]=e[10],t[11]=e[14],t[12]=e[3],t[13]=e[7],t[14]=e[11],t[15]=e[15];return t}},600:t=>{t.exports=function(t,e,n,i){var r,o,a,s,c,u=e[0],h=e[1],d=e[2],f=e[3],l=n[0],m=n[1],v=n[2],p=n[3];return(o=u*l+h*m+d*v+f*p)<0&&(o=-o,l=-l,m=-m,v=-v,p=-p),1-o>1e-6?(r=Math.acos(o),a=Math.sin(r),s=Math.sin((1-i)*r)/a,c=Math.sin(i*r)/a):(s=1-i,c=i),t[0]=s*u+c*l,t[1]=s*h+c*m,t[2]=s*d+c*v,t[3]=s*f+c*p,t}},858:t=>{t.exports=function(t,e,n){var i=e[0],r=e[1],o=e[2],a=n[0],s=n[1],c=n[2];return t[0]=r*c-o*s,t[1]=o*a-i*c,t[2]=i*s-r*a,t}},368:t=>{t.exports=function(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]}},563:t=>{t.exports=function(t){var e=t[0],n=t[1],i=t[2];return Math.sqrt(e*e+n*n+i*i)}},919:t=>{t.exports=function(t,e,n,i){var r=e[0],o=e[1],a=e[2];return t[0]=r+i*(n[0]-r),t[1]=o+i*(n[1]-o),t[2]=a+i*(n[2]-a),t}},91:t=>{t.exports=function(t,e){var n=e[0],i=e[1],r=e[2],o=n*n+i*i+r*r;return o>0&&(o=1/Math.sqrt(o),t[0]=e[0]*o,t[1]=e[1]*o,t[2]=e[2]*o),t}},795:(t,e,n)=>{"use strict";var i=n(33);t.exports=i&&function(){var t=!1;try{var e=Object.defineProperty({},"passive",{get:function(){t=!0}});window.addEventListener("test",null,e),window.removeEventListener("test",null,e)}catch(e){t=!1}return t}()},33:t=>{t.exports=!0},805:(t,e,n)=>{var i=n(604),r=n(252),o=n(447),a=n(594),s=n(481),c=n(683),u={length:n(563),normalize:n(91),dot:n(368),cross:n(858)},h=r(),d=r(),f=[0,0,0,0],l=[[0,0,0],[0,0,0],[0,0,0]],m=[0,0,0];function v(t,e,n,i,r){t[0]=e[0]*i+n[0]*r,t[1]=e[1]*i+n[1]*r,t[2]=e[2]*i+n[2]*r}t.exports=function(t,e,n,r,p,g){if(e||(e=[0,0,0]),n||(n=[0,0,0]),r||(r=[0,0,0]),p||(p=[0,0,0,1]),g||(g=[0,0,0,1]),!i(h,t))return!1;if(o(d,h),d[3]=0,d[7]=0,d[11]=0,d[15]=1,Math.abs(a(d)<1e-8))return!1;var y,x,w,M,_,S,b,I=h[3],D=h[7],C=h[11],P=h[12],E=h[13],L=h[14],T=h[15];if(0!==I||0!==D||0!==C){if(f[0]=I,f[1]=D,f[2]=C,f[3]=T,!s(d,d))return!1;c(d,d),y=p,w=d,M=(x=f)[0],_=x[1],S=x[2],b=x[3],y[0]=w[0]*M+w[4]*_+w[8]*S+w[12]*b,y[1]=w[1]*M+w[5]*_+w[9]*S+w[13]*b,y[2]=w[2]*M+w[6]*_+w[10]*S+w[14]*b,y[3]=w[3]*M+w[7]*_+w[11]*S+w[15]*b}else p[0]=p[1]=p[2]=0,p[3]=1;if(e[0]=P,e[1]=E,e[2]=L,function(t,e){t[0][0]=e[0],t[0][1]=e[1],t[0][2]=e[2],t[1][0]=e[4],t[1][1]=e[5],t[1][2]=e[6],t[2][0]=e[8],t[2][1]=e[9],t[2][2]=e[10]}(l,h),n[0]=u.length(l[0]),u.normalize(l[0],l[0]),r[0]=u.dot(l[0],l[1]),v(l[1],l[1],l[0],1,-r[0]),n[1]=u.length(l[1]),u.normalize(l[1],l[1]),r[0]/=n[1],r[1]=u.dot(l[0],l[2]),v(l[2],l[2],l[0],1,-r[1]),r[2]=u.dot(l[1],l[2]),v(l[2],l[2],l[1],1,-r[2]),n[2]=u.length(l[2]),u.normalize(l[2],l[2]),r[1]/=n[2],r[2]/=n[2],u.cross(m,l[1],l[2]),u.dot(l[0],m)<0)for(var q=0;q<3;q++)n[q]*=-1,l[q][0]*=-1,l[q][1]*=-1,l[q][2]*=-1;return g[0]=.5*Math.sqrt(Math.max(1+l[0][0]-l[1][1]-l[2][2],0)),g[1]=.5*Math.sqrt(Math.max(1-l[0][0]+l[1][1]-l[2][2],0)),g[2]=.5*Math.sqrt(Math.max(1-l[0][0]-l[1][1]+l[2][2],0)),g[3]=.5*Math.sqrt(Math.max(1+l[0][0]+l[1][1]+l[2][2],0)),l[2][1]>l[1][2]&&(g[0]=-g[0]),l[0][2]>l[2][0]&&(g[1]=-g[1]),l[1][0]>l[0][1]&&(g[2]=-g[2]),!0}},604:t=>{t.exports=function(t,e){var n=e[15];if(0===n)return!1;for(var i=1/n,r=0;r<16;r++)t[r]=e[r]*i;return!0}},726:(t,e,n)=>{var i=n(919),r=n(814),o=n(805),a=n(594),s=n(210),c=d(),u=d(),h=d();function d(){return{translate:f(),scale:f(1),skew:f(),perspective:[0,0,0,1],quaternion:[0,0,0,1]}}function f(t){return[t||0,t||0,t||0]}t.exports=function(t,e,n,d){if(0===a(e)||0===a(n))return!1;var f=o(e,c.translate,c.scale,c.skew,c.perspective,c.quaternion),l=o(n,u.translate,u.scale,u.skew,u.perspective,u.quaternion);return!(!f||!l||(i(h.translate,c.translate,u.translate,d),i(h.skew,c.skew,u.skew,d),i(h.scale,c.scale,u.scale,d),i(h.perspective,c.perspective,u.perspective,d),s(h.quaternion,c.quaternion,u.quaternion,d),r(t,h.translate,h.scale,h.skew,h.perspective,h.quaternion),0))}},814:(t,e,n)=>{var i={identity:n(312),translate:n(602),multiply:n(401),create:n(252),scale:n(28),fromRotationTranslation:n(872)},r=(i.create(),i.create());t.exports=function(t,e,n,o,a,s){return i.identity(t),i.fromRotationTranslation(t,s,e),t[3]=a[0],t[7]=a[1],t[11]=a[2],t[15]=a[3],i.identity(r),0!==o[2]&&(r[9]=o[2],i.multiply(t,t,r)),0!==o[1]&&(r[9]=0,r[8]=o[1],i.multiply(t,t,r)),0!==o[0]&&(r[8]=0,r[4]=o[0],i.multiply(t,t,r)),i.scale(t,t,n),t}},622:(t,e,n)=>{"use strict";var i=n(76),r=n(726),o=n(481),a=n(663),s=n(113),c=n(974),u=n(727),h=n(602),d=(n(28),n(91)),f=[0,0,0];function l(t){this._components=t.slice(),this._time=[0],this.prevMatrix=t.slice(),this.nextMatrix=t.slice(),this.computedMatrix=t.slice(),this.computedInverse=t.slice(),this.computedEye=[0,0,0],this.computedUp=[0,0,0],this.computedCenter=[0,0,0],this.computedRadius=[0],this._limits=[-1/0,1/0]}t.exports=function(t){return new l((t=t||{}).matrix||[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])};var m=l.prototype;m.recalcMatrix=function(t){var e=this._time,n=i.le(e,t),a=this.computedMatrix;if(!(n<0)){var s=this._components;if(n===e.length-1)for(var c=16*n,u=0;u<16;++u)a[u]=s[c++];else{var h=e[n+1]-e[n],f=(c=16*n,this.prevMatrix),l=!0;for(u=0;u<16;++u)f[u]=s[c++];var m=this.nextMatrix;for(u=0;u<16;++u)m[u]=s[c++],l=l&&f[u]===m[u];if(h<1e-6||l)for(u=0;u<16;++u)a[u]=f[u];else r(a,f,m,(t-e[n])/h)}var v=this.computedUp;v[0]=a[1],v[1]=a[5],v[2]=a[9],d(v,v);var p=this.computedInverse;o(p,a);var g=this.computedEye,y=p[15];g[0]=p[12]/y,g[1]=p[13]/y,g[2]=p[14]/y;var x=this.computedCenter,w=Math.exp(this.computedRadius[0]);for(u=0;u<3;++u)x[u]=g[u]-a[2+4*u]*w}},m.idle=function(t){if(!(t<this.lastT())){for(var e=this._components,n=e.length-16,i=0;i<16;++i)e.push(e[n++]);this._time.push(t)}},m.flush=function(t){var e=i.gt(this._time,t)-2;e<0||(this._time.splice(0,e),this._components.splice(0,16*e))},m.lastT=function(){return this._time[this._time.length-1]},m.lookAt=function(t,e,n,i){this.recalcMatrix(t),e=e||this.computedEye,n=n||f,i=i||this.computedUp,this.setMatrix(t,u(this.computedMatrix,e,n,i));for(var r=0,o=0;o<3;++o)r+=Math.pow(n[o]-e[o],2);r=Math.log(Math.sqrt(r)),this.computedRadius[0]=r},m.rotate=function(t,e,n,i){this.recalcMatrix(t);var r=this.computedInverse;e&&s(r,r,e),n&&a(r,r,n),i&&c(r,r,i),this.setMatrix(t,o(this.computedMatrix,r))};var v=[0,0,0];m.pan=function(t,e,n,i){v[0]=-(e||0),v[1]=-(n||0),v[2]=-(i||0),this.recalcMatrix(t);var r=this.computedInverse;h(r,r,v),this.setMatrix(t,o(r,r))},m.translate=function(t,e,n,i){v[0]=e||0,v[1]=n||0,v[2]=i||0,this.recalcMatrix(t);var r=this.computedMatrix;h(r,r,v),this.setMatrix(t,r)},m.setMatrix=function(t,e){if(!(t<this.lastT())){this._time.push(t);for(var n=0;n<16;++n)this._components.push(e[n])}},m.setDistance=function(t,e){this.computedRadius[0]=e},m.setDistanceLimits=function(t,e){var n=this._limits;n[0]=t,n[1]=e},m.getDistanceLimits=function(t){var e=this._limits;return t?(t[0]=e[0],t[1]=e[1],t):e}},685:(t,e,n)=>{"use strict";t.exports=function(t,e){e||(e=t,t=window);var n=0,r=0,o=0,a={shift:!1,alt:!1,control:!1,meta:!1},s=!1;function c(t){var e=!1;return"altKey"in t&&(e=e||t.altKey!==a.alt,a.alt=!!t.altKey),"shiftKey"in t&&(e=e||t.shiftKey!==a.shift,a.shift=!!t.shiftKey),"ctrlKey"in t&&(e=e||t.ctrlKey!==a.control,a.control=!!t.ctrlKey),"metaKey"in t&&(e=e||t.metaKey!==a.meta,a.meta=!!t.metaKey),e}function u(t,s){var u=i.x(s),h=i.y(s);"buttons"in s&&(t=0|s.buttons),(t!==n||u!==r||h!==o||c(s))&&(n=0|t,r=u||0,o=h||0,e&&e(n,r,o,a))}function h(t){u(0,t)}function d(){(n||r||o||a.shift||a.alt||a.meta||a.control)&&(r=o=0,n=0,a.shift=a.alt=a.control=a.meta=!1,e&&e(0,0,0,a))}function f(t){c(t)&&e&&e(n,r,o,a)}function l(t){0===i.buttons(t)?u(0,t):u(n,t)}function m(t){u(n|i.buttons(t),t)}function v(t){u(n&~i.buttons(t),t)}function p(){s||(s=!0,t.addEventListener("mousemove",l),t.addEventListener("mousedown",m),t.addEventListener("mouseup",v),t.addEventListener("mouseleave",h),t.addEventListener("mouseenter",h),t.addEventListener("mouseout",h),t.addEventListener("mouseover",h),t.addEventListener("blur",d),t.addEventListener("keyup",f),t.addEventListener("keydown",f),t.addEventListener("keypress",f),t!==window&&(window.addEventListener("blur",d),window.addEventListener("keyup",f),window.addEventListener("keydown",f),window.addEventListener("keypress",f)))}p();var g={element:t};return Object.defineProperties(g,{enabled:{get:function(){return s},set:function(e){e?p():s&&(s=!1,t.removeEventListener("mousemove",l),t.removeEventListener("mousedown",m),t.removeEventListener("mouseup",v),t.removeEventListener("mouseleave",h),t.removeEventListener("mouseenter",h),t.removeEventListener("mouseout",h),t.removeEventListener("mouseover",h),t.removeEventListener("blur",d),t.removeEventListener("keyup",f),t.removeEventListener("keydown",f),t.removeEventListener("keypress",f),t!==window&&(window.removeEventListener("blur",d),window.removeEventListener("keyup",f),window.removeEventListener("keydown",f),window.removeEventListener("keypress",f)))},enumerable:!0},buttons:{get:function(){return n},enumerable:!0},x:{get:function(){return r},enumerable:!0},y:{get:function(){return o},enumerable:!0},mods:{get:function(){return a},enumerable:!0}}),g};var i=n(294)},675:t=>{var e={left:0,top:0};t.exports=function(t,n,i){n=n||t.currentTarget||t.srcElement,Array.isArray(i)||(i=[0,0]);var r,o=t.clientX||0,a=t.clientY||0,s=(r=n)===window||r===document||r===document.body?e:r.getBoundingClientRect();return i[0]=o-s.left,i[1]=a-s.top,i}},294:(t,e)=>{"use strict";function n(t){return t.target||t.srcElement||window}e.buttons=function(t){if("object"==typeof t){if("buttons"in t)return t.buttons;if("which"in t){if(2===(e=t.which))return 4;if(3===e)return 2;if(e>0)return 1<<e-1}else if("button"in t){var e;if(1===(e=t.button))return 4;if(2===e)return 2;if(e>=0)return 1<<e}}return 0},e.element=n,e.x=function(t){if("object"==typeof t){if("offsetX"in t)return t.offsetX;var e=n(t).getBoundingClientRect();return t.clientX-e.left}return 0},e.y=function(t){if("object"==typeof t){if("offsetY"in t)return t.offsetY;var e=n(t).getBoundingClientRect();return t.clientY-e.top}return 0}},232:(t,e,n)=>{"use strict";var i=n(810);t.exports=function(t,e,n){"function"==typeof t&&(n=!!e,e=t,t=window);var r=i("ex",t),o=function(t){n&&t.preventDefault();var i=t.deltaX||0,o=t.deltaY||0,a=t.deltaZ||0,s=1;switch(t.deltaMode){case 1:s=r;break;case 2:s=window.innerHeight}if(o*=s,a*=s,(i*=s)||o||a)return e(i,o,a,t)};return t.addEventListener("wheel",o),o}},918:t=>{"use strict";t.exports=function(t,e,n,i,r,o,a,s,c,u){var h=e+o+u;if(d>0){var d=Math.sqrt(h+1);t[0]=.5*(a-c)/d,t[1]=.5*(s-i)/d,t[2]=.5*(n-o)/d,t[3]=.5*d}else{var f=Math.max(e,o,u);d=Math.sqrt(2*f-h+1),e>=f?(t[0]=.5*d,t[1]=.5*(r+n)/d,t[2]=.5*(s+i)/d,t[3]=.5*(a-c)/d):o>=f?(t[0]=.5*(n+r)/d,t[1]=.5*d,t[2]=.5*(c+a)/d,t[3]=.5*(s-i)/d):(t[0]=.5*(i+s)/d,t[1]=.5*(a+c)/d,t[2]=.5*d,t[3]=.5*(n-r)/d)}return t}},809:(t,e,n)=>{"use strict";t.exports=function(t){var e=(t=t||{}).center||[0,0,0],n=t.rotation||[0,0,0,1],i=t.radius||1;e=[].slice.call(e,0,3),h(n=[].slice.call(n,0,4),n);var r=new d(n,e,Math.log(i));return r.setDistanceLimits(t.zoomMin,t.zoomMax),("eye"in t||"up"in t)&&r.lookAt(0,t.eye,t.center,t.up),r};var i=n(173),r=n(727),o=n(127),a=n(481),s=n(918);function c(t,e,n){return Math.sqrt(Math.pow(t,2)+Math.pow(e,2)+Math.pow(n,2))}function u(t,e,n,i){return Math.sqrt(Math.pow(t,2)+Math.pow(e,2)+Math.pow(n,2)+Math.pow(i,2))}function h(t,e){var n=e[0],i=e[1],r=e[2],o=e[3],a=u(n,i,r,o);a>1e-6?(t[0]=n/a,t[1]=i/a,t[2]=r/a,t[3]=o/a):(t[0]=t[1]=t[2]=0,t[3]=1)}function d(t,e,n){this.radius=i([n]),this.center=i(e),this.rotation=i(t),this.computedRadius=this.radius.curve(0),this.computedCenter=this.center.curve(0),this.computedRotation=this.rotation.curve(0),this.computedUp=[.1,0,0],this.computedEye=[.1,0,0],this.computedMatrix=[.1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],this.recalcMatrix(0)}var f=d.prototype;f.lastT=function(){return Math.max(this.radius.lastT(),this.center.lastT(),this.rotation.lastT())},f.recalcMatrix=function(t){this.radius.curve(t),this.center.curve(t),this.rotation.curve(t);var e=this.computedRotation;h(e,e);var n=this.computedMatrix;o(n,e);var i=this.computedCenter,r=this.computedEye,a=this.computedUp,s=Math.exp(this.computedRadius[0]);r[0]=i[0]+s*n[2],r[1]=i[1]+s*n[6],r[2]=i[2]+s*n[10],a[0]=n[1],a[1]=n[5],a[2]=n[9];for(var c=0;c<3;++c){for(var u=0,d=0;d<3;++d)u+=n[c+4*d]*r[d];n[12+c]=-u}},f.getMatrix=function(t,e){this.recalcMatrix(t);var n=this.computedMatrix;if(e){for(var i=0;i<16;++i)e[i]=n[i];return e}return n},f.idle=function(t){this.center.idle(t),this.radius.idle(t),this.rotation.idle(t)},f.flush=function(t){this.center.flush(t),this.radius.flush(t),this.rotation.flush(t)},f.pan=function(t,e,n,i){e=e||0,n=n||0,i=i||0,this.recalcMatrix(t);var r=this.computedMatrix,o=r[1],a=r[5],s=r[9],u=c(o,a,s);o/=u,a/=u,s/=u;var h=r[0],d=r[4],f=r[8],l=h*o+d*a+f*s,m=c(h-=o*l,d-=a*l,f-=s*l);h/=m,d/=m,f/=m;var v=r[2],p=r[6],g=r[10],y=v*o+p*a+g*s,x=v*h+p*d+g*f,w=c(v-=y*o+x*h,p-=y*a+x*d,g-=y*s+x*f);v/=w,p/=w,g/=w;var M=h*e+o*n,_=d*e+a*n,S=f*e+s*n;this.center.move(t,M,_,S);var b=Math.exp(this.computedRadius[0]);b=Math.max(1e-4,b+i),this.radius.set(t,Math.log(b))},f.rotate=function(t,e,n,i){this.recalcMatrix(t),e=e||0,n=n||0;var r=this.computedMatrix,o=r[0],a=r[4],s=r[8],h=r[1],d=r[5],f=r[9],l=r[2],m=r[6],v=r[10],p=e*o+n*h,g=e*a+n*d,y=e*s+n*f,x=-(m*y-v*g),w=-(v*p-l*y),M=-(l*g-m*p),_=Math.sqrt(Math.max(0,1-Math.pow(x,2)-Math.pow(w,2)-Math.pow(M,2))),S=u(x,w,M,_);S>1e-6?(x/=S,w/=S,M/=S,_/=S):(x=w=M=0,_=1);var b=this.computedRotation,I=b[0],D=b[1],C=b[2],P=b[3],E=I*_+P*x+D*M-C*w,L=D*_+P*w+C*x-I*M,T=C*_+P*M+I*w-D*x,q=P*_-I*x-D*w-C*M;if(i){x=l,w=m,M=v;var R=Math.sin(i)/c(x,w,M);x*=R,w*=R,M*=R,q=q*(_=Math.cos(e))-(E=E*_+q*x+L*M-T*w)*x-(L=L*_+q*w+T*x-E*M)*w-(T=T*_+q*M+E*w-L*x)*M}var A=u(E,L,T,q);A>1e-6?(E/=A,L/=A,T/=A,q/=A):(E=L=T=0,q=1),this.rotation.set(t,E,L,T,q)},f.lookAt=function(t,e,n,i){this.recalcMatrix(t),n=n||this.computedCenter,e=e||this.computedEye,i=i||this.computedUp;var o=this.computedMatrix;r(o,e,n,i);var a=this.computedRotation;s(a,o[0],o[1],o[2],o[4],o[5],o[6],o[8],o[9],o[10]),h(a,a),this.rotation.set(t,a[0],a[1],a[2],a[3]);for(var c=0,u=0;u<3;++u)c+=Math.pow(n[u]-e[u],2);this.radius.set(t,.5*Math.log(Math.max(c,1e-6))),this.center.set(t,n[0],n[1],n[2])},f.translate=function(t,e,n,i){this.center.move(t,e||0,n||0,i||0)},f.setMatrix=function(t,e){var n=this.computedRotation;s(n,e[0],e[1],e[2],e[4],e[5],e[6],e[8],e[9],e[10]),h(n,n),this.rotation.set(t,n[0],n[1],n[2],n[3]);var i=this.computedMatrix;a(i,e);var r=i[15];if(Math.abs(r)>1e-6){var o=i[12]/r,c=i[13]/r,u=i[14]/r;this.recalcMatrix(t);var d=Math.exp(this.computedRadius[0]);this.center.set(t,o-i[2]*d,c-i[6]*d,u-i[10]*d),this.radius.idle(t)}else this.center.idle(t),this.radius.idle(t)},f.setDistance=function(t,e){e>0&&this.radius.set(t,Math.log(e))},f.setDistanceLimits=function(t,e){t=t>0?Math.log(t):-1/0,e=e>0?Math.log(e):1/0,e=Math.max(e,t),this.radius.bounds[0][0]=t,this.radius.bounds[1][0]=e},f.getDistanceLimits=function(t){var e=this.radius.bounds;return t?(t[0]=Math.exp(e[0][0]),t[1]=Math.exp(e[1][0]),t):[Math.exp(e[0][0]),Math.exp(e[1][0])]},f.toJSON=function(){return this.recalcMatrix(this.lastT()),{center:this.computedCenter.slice(),rotation:this.computedRotation.slice(),distance:Math.log(this.computedRadius[0]),zoomMin:this.radius.bounds[0][0],zoomMax:this.radius.bounds[1][0]}},f.fromJSON=function(t){var e=this.lastT(),n=t.center;n&&this.center.set(e,n[0],n[1],n[2]);var i=t.rotation;i&&this.rotation.set(e,i[0],i[1],i[2],i[3]);var r=t.distance;r&&r>0&&this.radius.set(e,Math.log(r)),this.setDistanceLimits(t.zoomMin,t.zoomMax)}},885:t=>{t.exports=function(t,e){e||(e=[0,""]),t=String(t);var n=parseFloat(t,10);return e[0]=n,e[1]=t.match(/[\d.\-\+]*\s*(.*)/)[1]||"",e}},210:(t,e,n)=>{t.exports=n(600)},698:(t,e,n)=>{t.exports=n.g.performance&&n.g.performance.now?function(){return performance.now()}:Date.now||function(){return+new Date}},810:(t,e,n)=>{"use strict";var i=n(885);t.exports=s;var r=a("in",document.body);function o(t,e){var n=i(getComputedStyle(t).getPropertyValue(e));return n[0]*s(n[1],t)}function a(t,e){var n=document.createElement("div");n.style.height="128"+t,e.appendChild(n);var i=o(n,"height")/128;return e.removeChild(n),i}function s(t,e){if(!t)return null;switch(e=e||document.body,t=(t+""||"px").trim().toLowerCase(),e!==window&&e!==document||(e=document.body),t){case"%":return e.clientHeight/100;case"ch":case"ex":return a(t,e);case"em":return o(e,"font-size");case"rem":return o(document.body,"font-size");case"vw":return window.innerWidth/100;case"vh":return window.innerHeight/100;case"vmin":return Math.min(window.innerWidth,window.innerHeight)/100;case"vmax":return Math.max(window.innerWidth,window.innerHeight)/100;case"in":return r;case"cm":return r/2.54;case"mm":return r/25.4;case"pt":return r/72;case"pc":return r/6;case"px":return 1}var n=i(t);if(!isNaN(n[0])&&n[1]){var c=s(n[1],e);return"number"==typeof c?n[0]*c:null}return null}},786:(t,e,n)=>{"use strict";t.exports=function(t){var e=(t=t||{}).center||[0,0,0],n=t.up||[0,1,0],i=t.right||d(n),r=t.radius||1,o=t.theta||0,h=t.phi||0;if(e=[].slice.call(e,0,3),n=[].slice.call(n,0,3),s(n,n),i=[].slice.call(i,0,3),s(i,i),"eye"in t){var l=t.eye,m=[l[0]-e[0],l[1]-e[1],l[2]-e[2]];a(i,m,n),u(i[0],i[1],i[2])<1e-6?i=d(n):s(i,i),r=u(m[0],m[1],m[2]);var v=c(n,m)/r,p=c(i,m)/r;h=Math.acos(v),o=Math.acos(p)}return r=Math.log(r),new f(t.zoomMin,t.zoomMax,e,n,i,r,o,h)};var i=n(173),r=n(481),o=n(397),a=n(858),s=n(91),c=n(368);function u(t,e,n){return Math.sqrt(Math.pow(t,2)+Math.pow(e,2)+Math.pow(n,2))}function h(t){return Math.min(1,Math.max(-1,t))}function d(t){var e=Math.abs(t[0]),n=Math.abs(t[1]),i=Math.abs(t[2]),r=[0,0,0];e>Math.max(n,i)?r[2]=1:n>Math.max(e,i)?r[0]=1:r[1]=1;for(var o=0,a=0,c=0;c<3;++c)o+=t[c]*t[c],a+=r[c]*t[c];for(c=0;c<3;++c)r[c]-=a/o*t[c];return s(r,r),r}function f(t,e,n,r,o,a,s,c){this.center=i(n),this.up=i(r),this.right=i(o),this.radius=i([a]),this.angle=i([s,c]),this.angle.bounds=[[-1/0,-Math.PI/2],[1/0,Math.PI/2]],this.setDistanceLimits(t,e),this.computedCenter=this.center.curve(0),this.computedUp=this.up.curve(0),this.computedRight=this.right.curve(0),this.computedRadius=this.radius.curve(0),this.computedAngle=this.angle.curve(0),this.computedToward=[0,0,0],this.computedEye=[0,0,0],this.computedMatrix=new Array(16);for(var u=0;u<16;++u)this.computedMatrix[u]=.5;this.recalcMatrix(0)}var l=f.prototype;l.setDistanceLimits=function(t,e){t=t>0?Math.log(t):-1/0,e=e>0?Math.log(e):1/0,e=Math.max(e,t),this.radius.bounds[0][0]=t,this.radius.bounds[1][0]=e},l.getDistanceLimits=function(t){var e=this.radius.bounds[0];return t?(t[0]=Math.exp(e[0][0]),t[1]=Math.exp(e[1][0]),t):[Math.exp(e[0][0]),Math.exp(e[1][0])]},l.recalcMatrix=function(t){this.center.curve(t),this.up.curve(t),this.right.curve(t),this.radius.curve(t),this.angle.curve(t);for(var e=this.computedUp,n=this.computedRight,i=0,r=0,o=0;o<3;++o)r+=e[o]*n[o],i+=e[o]*e[o];var c=Math.sqrt(i),h=0;for(o=0;o<3;++o)n[o]-=e[o]*r/i,h+=n[o]*n[o],e[o]/=c;var d=Math.sqrt(h);for(o=0;o<3;++o)n[o]/=d;var f=this.computedToward;a(f,e,n),s(f,f);var l=Math.exp(this.computedRadius[0]),m=this.computedAngle[0],v=this.computedAngle[1],p=Math.cos(m),g=Math.sin(m),y=Math.cos(v),x=Math.sin(v),w=this.computedCenter,M=p*y,_=g*y,S=x,b=-p*x,I=-g*x,D=y,C=this.computedEye,P=this.computedMatrix;for(o=0;o<3;++o){var E=M*n[o]+_*f[o]+S*e[o];P[4*o+1]=b*n[o]+I*f[o]+D*e[o],P[4*o+2]=E,P[4*o+3]=0}var L=P[1],T=P[5],q=P[9],R=P[2],A=P[6],k=P[10],F=T*k-q*A,z=q*R-L*k,U=L*A-T*R,N=u(F,z,U);for(F/=N,z/=N,U/=N,P[0]=F,P[4]=z,P[8]=U,o=0;o<3;++o)C[o]=w[o]+P[2+4*o]*l;for(o=0;o<3;++o){h=0;for(var O=0;O<3;++O)h+=P[o+4*O]*C[O];P[12+o]=-h}P[15]=1},l.getMatrix=function(t,e){this.recalcMatrix(t);var n=this.computedMatrix;if(e){for(var i=0;i<16;++i)e[i]=n[i];return e}return n};var m=[0,0,0];l.rotate=function(t,e,n,i){if(this.angle.move(t,e,n),i){this.recalcMatrix(t);var r=this.computedMatrix;m[0]=r[2],m[1]=r[6],m[2]=r[10];for(var a=this.computedUp,s=this.computedRight,c=this.computedToward,u=0;u<3;++u)r[4*u]=a[u],r[4*u+1]=s[u],r[4*u+2]=c[u];for(o(r,r,i,m),u=0;u<3;++u)a[u]=r[4*u],s[u]=r[4*u+1];this.up.set(t,a[0],a[1],a[2]),this.right.set(t,s[0],s[1],s[2])}},l.pan=function(t,e,n,i){e=e||0,n=n||0,i=i||0,this.recalcMatrix(t);var r=this.computedMatrix,o=(Math.exp(this.computedRadius[0]),r[1]),a=r[5],s=r[9],c=u(o,a,s);o/=c,a/=c,s/=c;var h=r[0],d=r[4],f=r[8],l=h*o+d*a+f*s,m=u(h-=o*l,d-=a*l,f-=s*l),v=(h/=m)*e+o*n,p=(d/=m)*e+a*n,g=(f/=m)*e+s*n;this.center.move(t,v,p,g);var y=Math.exp(this.computedRadius[0]);y=Math.max(1e-4,y+i),this.radius.set(t,Math.log(y))},l.translate=function(t,e,n,i){this.center.move(t,e||0,n||0,i||0)},l.setMatrix=function(t,e,n,i){var o=1;"number"==typeof n&&(o=0|n),(o<0||o>3)&&(o=1);var a=(o+2)%3;e||(this.recalcMatrix(t),e=this.computedMatrix);var s=e[o],c=e[o+4],d=e[o+8];if(i){var f=Math.abs(s),l=Math.abs(c),m=Math.abs(d),v=Math.max(f,l,m);f===v?(s=s<0?-1:1,c=d=0):m===v?(d=d<0?-1:1,s=c=0):(c=c<0?-1:1,s=d=0)}else{var p=u(s,c,d);s/=p,c/=p,d/=p}var g,y,x=e[a],w=e[a+4],M=e[a+8],_=x*s+w*c+M*d,S=u(x-=s*_,w-=c*_,M-=d*_),b=c*(M/=S)-d*(w/=S),I=d*(x/=S)-s*M,D=s*w-c*x,C=u(b,I,D);if(b/=C,I/=C,D/=C,this.center.jump(t,W,X,j),this.radius.idle(t),this.up.jump(t,s,c,d),this.right.jump(t,x,w,M),2===o){var P=e[1],E=e[5],L=e[9],T=P*x+E*w+L*M,q=P*b+E*I+L*D;g=F<0?-Math.PI/2:Math.PI/2,y=Math.atan2(q,T)}else{var R=e[2],A=e[6],k=e[10],F=R*s+A*c+k*d,z=R*x+A*w+k*M,U=R*b+A*I+k*D;g=Math.asin(h(F)),y=Math.atan2(U,z)}this.angle.jump(t,y,g),this.recalcMatrix(t);var N=e[2],O=e[6],B=e[10],Y=this.computedMatrix;r(Y,e);var H=Y[15],W=Y[12]/H,X=Y[13]/H,j=Y[14]/H,Z=Math.exp(this.computedRadius[0]);this.center.jump(t,W-N*Z,X-O*Z,j-B*Z)},l.lastT=function(){return Math.max(this.center.lastT(),this.up.lastT(),this.right.lastT(),this.radius.lastT(),this.angle.lastT())},l.idle=function(t){this.center.idle(t),this.up.idle(t),this.right.idle(t),this.radius.idle(t),this.angle.idle(t)},l.flush=function(t){this.center.flush(t),this.up.flush(t),this.right.flush(t),this.radius.flush(t),this.angle.flush(t)},l.setDistance=function(t,e){e>0&&this.radius.set(t,Math.log(e))},l.lookAt=function(t,e,n,i){this.recalcMatrix(t),e=e||this.computedEye,n=n||this.computedCenter;var r=(i=i||this.computedUp)[0],o=i[1],a=i[2],s=u(r,o,a);if(!(s<1e-6)){r/=s,o/=s,a/=s;var c=e[0]-n[0],d=e[1]-n[1],f=e[2]-n[2],l=u(c,d,f);if(!(l<1e-6)){c/=l,d/=l,f/=l;var m=this.computedRight,v=m[0],p=m[1],g=m[2],y=r*v+o*p+a*g,x=u(v-=y*r,p-=y*o,g-=y*a);if(!(x<.01&&(x=u(v=o*f-a*d,p=a*c-r*f,g=r*d-o*c))<1e-6)){v/=x,p/=x,g/=x,this.up.set(t,r,o,a),this.right.set(t,v,p,g),this.center.set(t,n[0],n[1],n[2]),this.radius.set(t,Math.log(l));var w=o*g-a*p,M=a*v-r*g,_=r*p-o*v,S=u(w,M,_),b=r*c+o*d+a*f,I=v*c+p*d+g*f,D=(w/=S)*c+(M/=S)*d+(_/=S)*f,C=Math.asin(h(b)),P=Math.atan2(D,I),E=this.angle._state,L=E[E.length-1],T=E[E.length-2];L%=2*Math.PI;var q=Math.abs(L+2*Math.PI-P),R=Math.abs(L-P),A=Math.abs(L-2*Math.PI-P);q<R&&(L+=2*Math.PI),A<R&&(L-=2*Math.PI),this.angle.jump(this.angle.lastT(),L,T),this.angle.set(t,P,C)}}}}},779:t=>{t.exports="#version 300 es\nprecision highp float;\n\nuniform vec3 u_Eye, u_Ref, u_Up;\nuniform vec2 u_Dimensions;\nuniform float u_Time;\n\nin vec2 fs_Pos;\nout vec4 out_Col;\n\nconst int MAX_RAY_STEPS = 140;\nconst float FOV = 45.0;\nconst float EPSILON = 0.001;\n\nconst vec3 EYE = vec3(0.0, 10.0, 0.0);\nconst vec3 REF = vec3(0.0, 6.0, 40.0);\n\nconst vec3 WORLD_UP = vec3(0.0, 1.0, 0.0);\nconst vec3 WORLD_RIGHT = vec3(-1.0, 0.0, 0.0);\nconst vec3 WORLD_FORWARD = vec3(0.0, 0.0, 1.0);\n\n#define SUN_KEY_LIGHT vec3(0.4, 0.4, 0.4) * 1.5\n\n\nstruct Ray \n{\n    vec3 origin;\n    vec3 direction;\n};\n\nstruct Intersection \n{\n    vec3 position;\n    vec3 normal;\n    float distance;\n    int material_id;\n};\n\nstruct SdfInformation\n{\n  float distance;\n  int material_id;\n};\n\nstruct DirectionalLight\n{\n    vec3 dir;\n    vec3 color;\n};\n\n////////////////////-------------- UTILITIES --------------////////////////////\nvec4 vec3ToVec4(vec3 vec, float f) {\n    return vec4(vec[0], vec[1], vec[2], f);\n}\n\nvec3 vec4ToVec3(vec4 vec) {\n    return vec3(vec[0], vec[1], vec[2]);\n}\n\nfloat remap(float val, float oldmin, float oldmax, float newmin, float newmax) {\n    float normalized = (val - oldmin)/(oldmax - oldmin);\n    return (normalized * (newmax - newmin)) + newmin;\n}\n\n////////////////////-------------- TOOLBOX FUNCTIONS --------------////////////////////\nfloat getBias(float time, float bias)\n{\n  return (time / ((((1.0/bias) - 2.0)*(1.0 - time))+1.0));\n}\n\nfloat getGain(float time, float gain)\n{\n  if(time < 0.5)\n    return getBias(time * 2.0,gain)/2.0;\n  else\n    return getBias(time * 2.0 - 1.0,1.0 - gain)/2.0 + 0.5;\n}\n\nfloat easeInOutQuad(float x) {\n    return x < 0.5 ? 2.0 * x * x : 1.0 - pow(-2.0 * x + 2.0, 2.0) / 2.0;\n}\n\n////////////////////-------------- NOISE FUNCTIONS --------------////////////////////\nfloat noise3D( vec3 p ) {\n    return fract(sin(dot(p, vec3(127.1f, 311.7f, 213.f)))\n                 * 43758.5453f);\n}\n\nfloat interpNoise3D(float x, float y, float z) {\n    int intX = int(floor(x));\n    float fractX = fract(x);\n    int intY = int(floor(y));\n    float fractY = fract(y);\n    int intZ = int(floor(z));\n    float fractZ = fract(z);\n\n    float v1 = noise3D(vec3(intX, intY, intZ));\n    float v2 = noise3D(vec3(intX+1, intY, intZ));\n    float v3 = noise3D(vec3(intX, intY+1, intZ));\n    float v4 = noise3D(vec3(intX+1, intY+1, intZ));\n    float v5 = noise3D(vec3(intX, intY, intZ+1));\n    float v6 = noise3D(vec3(intX+1, intY, intZ+1));\n    float v7 = noise3D(vec3(intX, intY+1, intZ+1));\n    float v8 = noise3D(vec3(intX+1, intY+1, intZ+1));\n    \n    float i1 = mix(v1, v2, easeInOutQuad(fractX));\n    float i2 = mix(v3, v4, easeInOutQuad(fractX));\n    float i3 = mix(v5, v6, easeInOutQuad(fractX));\n    float i4 = mix(v7, v8, easeInOutQuad(fractX));\n\n    float m1 = mix(i1, i2, easeInOutQuad(fractY));\n    float m2 = mix(i3, i4, easeInOutQuad(fractY));\n\n    return mix(m1, m2, easeInOutQuad(fractZ));\n}\n\nfloat fbm(float x, float y, float z, float freq, float amp, int octaves, float persistence) {\n    float total = 0.0;\n\n    for(int i = 1; i <= octaves; i++) {\n        total += interpNoise3D(x * freq,\n                               y * freq,\n                               z * freq) * amp;\n\n        freq *= 2.0;\n        amp *= persistence;\n    }\n    return total;\n}\n\n/////////////////////////////////////////////////////////////////\n\nSdfInformation sphereSDF(vec3 query_position, vec3 position, float radius)\n{\n    SdfInformation sdfInformation;\n    sdfInformation.distance = length(query_position - position) - radius;\n    sdfInformation.material_id = -1;\n    \n    return sdfInformation;\n}\nSdfInformation torusSDF( vec3 p, vec2 t )\n{\n  vec2 q = vec2(length(p.xz)-t.x,p.y);\n\n  SdfInformation sdfInformation;\n  sdfInformation.distance = length(q)-t.y;\n  sdfInformation.material_id = -1;\n\n  return sdfInformation;\n}\n\n// capped cone from IQ\nSdfInformation cappedConeSDF( vec3 p, float h, float r1, float r2 )\n{\n  vec2 q = vec2( length(p.xz), p.y );\n  vec2 k1 = vec2(r2,h);\n  vec2 k2 = vec2(r2-r1,2.0*h);\n  vec2 ca = vec2(q.x-min(q.x,(q.y<0.0)?r1:r2), abs(q.y)-h);\n  vec2 cb = q - k1 + k2*clamp( dot(k1-q,k2)/dot(k2,k2), 0.0, 1.0 );\n  float s = (cb.x<0.0 && ca.y<0.0) ? -1.0 : 1.0;\n\n  SdfInformation sdfInformation;\n  sdfInformation.distance = s*sqrt( min(dot(ca,ca),dot(cb,cb)) );\n  sdfInformation.material_id = -1;\n\n  return sdfInformation;\n}\n\nSdfInformation coneSDF( vec3 p, vec2 c, float h )\n{\n  float q = length(p.xz);\n\n  SdfInformation sdfInformation;\n  sdfInformation.distance = max(dot(c.xy,vec2(q,p.y)),-h-p.y);\n  sdfInformation.material_id = -1;\n\n  return sdfInformation;\n}\n\nSdfInformation planeYSDF(vec3 queryPos, float height, float drxn)\n{\n    SdfInformation sdfInformation;\n    sdfInformation.distance = drxn*(queryPos.y - height);\n    sdfInformation.material_id = -1;\n    \n    return sdfInformation;\n}\nSdfInformation planeZSDF(vec3 queryPos, float height, float drxn) // drxn = -1 or +1\n{\n    SdfInformation sdfInformation;\n    sdfInformation.distance = drxn*(queryPos.z - height);\n    sdfInformation.material_id = -1;\n    \n    return sdfInformation;\n}\nSdfInformation capsuleSDF( vec3 queryPos, vec3 a, vec3 b, float r )\n{\n  vec3 pa = queryPos - a, ba = b - a;\n  float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n\n  SdfInformation sdfInformation;\n  sdfInformation.distance = length( pa - ba*h ) - r;\n  sdfInformation.material_id = -1;\n\n  return sdfInformation;\n}\n\nSdfInformation smoothUnion(SdfInformation d1, SdfInformation d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2.distance-d1.distance)/k, 0.0, 1.0 );\n    float newDistance = mix( d2.distance, d1.distance, h ) - k*h*(1.0-h);\n\n    if(d1.distance < d2.distance) {\n      d1.distance = newDistance;\n      return d1;\n    } else {\n      d2.distance = newDistance;\n      return d2;\n    }\n}\n\n\nfloat smoothSubtraction( float d1, float d2, float k ) \n{\n    float h = clamp( 0.5 - 0.5*(d2+d1)/k, 0.0, 1.0 );\n    return mix( d2, -d1, h ) + k*h*(1.0-h); \n}\n\nSdfInformation smoothIntersection( SdfInformation d1, SdfInformation d2, float k )\n{\n    float h = clamp( 0.5 - 0.5*(d2.distance-d1.distance)/k, 0.0, 1.0 );\n    float newDistance = mix( d2.distance, d1.distance, h ) + k*h*(1.0-h);\n\n    d1.distance = newDistance; // material of first is returned\n\n    return d1;\n}\n\nfloat getWaveDisp(float x, float noise){\n  float waterDisp = 0.8 * abs(sin(x * 10.0));\n  waterDisp += 0.5 * sin(x * 4.5) + noise * 3.0; \n  waterDisp += 40.0;\n  return waterDisp;\n}\n\nSdfInformation waveSDF(vec3 queryPos, float height)\n{\n    vec3 warpedCoords = queryPos * 0.1;\n    float noise = fbm(queryPos.x, queryPos.y, queryPos.z + u_Time / 2.0, 0.03, 1.0, 2, 0.5);\n    warpedCoords.x = warpedCoords.x + noise;\n\n    float waterDisp = getWaveDisp(warpedCoords.x + u_Time / 80.0, noise);\n\n    float distance = queryPos.y - height + waterDisp;\n\n    SdfInformation waveSdf;\n    waveSdf.distance = distance;\n    waveSdf.material_id = 0;\n\n    SdfInformation plane1Sdf = planeZSDF(queryPos, 153.0, 1.0);\n    SdfInformation plane2Sdf = planeZSDF(queryPos, 150.0, -1.0);\n\n    SdfInformation returnSdf = smoothIntersection(plane1Sdf, waveSdf, 2.0);\n    returnSdf = smoothIntersection(plane2Sdf, returnSdf, 2.0);\n    returnSdf.material_id = 0;\n    return returnSdf;\n}\n\nSdfInformation ghibliWaterSDF(vec3 queryPos, float height)\n{\n    vec3 warpedCoords = queryPos * 0.5;\n    warpedCoords.z *= 6.0;\n\n    SdfInformation sdf1;\n    float waterDisp1 = fbm(warpedCoords.x + u_Time/40.0, warpedCoords.y + u_Time/100.0, warpedCoords.z, 0.1, 3.0, 6, 0.4);\n    sdf1.distance = queryPos.y - height + waterDisp1;\n    sdf1.material_id = 0;\n\n    SdfInformation sdf2;\n    float waterDisp2 = fbm(warpedCoords.x + u_Time/40.0, warpedCoords.y + u_Time/100.0 + 0.001, warpedCoords.z, 0.1, 3.0, 6, 0.4);\n    sdf2.distance = queryPos.y - height + waterDisp2 + 0.0001;\n    sdf2.material_id = 1;\n\n    SdfInformation sdf3;\n    float waterDisp3 = fbm(warpedCoords.x + u_Time/40.0, warpedCoords.y + u_Time/100.0 + 0.002, warpedCoords.z, 0.1, 3.0, 6, 0.4);\n    sdf3.distance = queryPos.y - height + waterDisp3 + 0.0004;\n    sdf3.material_id = 2;\n\n    SdfInformation returnSdf = smoothUnion(sdf1, sdf2, 0.0);\n    returnSdf = smoothUnion(returnSdf, sdf3, 0.0);\n\n    // make water behind graphic style waves invisible\n    if(queryPos.z > 150.0) {\n      returnSdf.distance = 1.0;\n    }\n    return returnSdf;\n}\n\nSdfInformation landSdf(vec3 queryPos)\n{\n  vec3 warpedPos = queryPos;\n  warpedPos.x /= 3.5;\n  warpedPos.z /= 3.0;\n  warpedPos.y += warpedPos.x / 2.0; // smooths right edge down better\n\n  warpedPos.y += 3.0;\n  warpedPos.x -= 3.0;\n\n  warpedPos.x += fbm(0.0, queryPos.y, queryPos.z, 0.1, 10.0, 3, 0.3);\n  warpedPos.y += fbm(queryPos.x, 0.0, queryPos.z, 0.05, 2.0, 2, 0.3);\n\n  SdfInformation sphere = sphereSDF(warpedPos, vec3(-5.0, -10.0, 40.0), 20.0);\n  sphere.material_id = 3;\n  return sphere;\n}\n\nSdfInformation landLargeProxySdf(vec3 queryPos)\n{\n  vec3 warpedPos = queryPos;\n  warpedPos.x /= 3.5;\n  warpedPos.z /= 3.0;\n  warpedPos.y += warpedPos.x / 0.8; // smooths right edge down better\n\n  warpedPos.y += 3.0;\n  warpedPos.x -= 3.0;\n\n  warpedPos.x -= 0.5;\n  warpedPos.y -= 3.0;\n  warpedPos.z -= 0.5;\n\n\n  warpedPos.x += fbm(0.0, queryPos.y, queryPos.z, 0.1, 10.0, 3, 0.3);\n  warpedPos.y += fbm(queryPos.x, 0.0, queryPos.z, 0.05, 2.0, 2, 0.3);\n\n  SdfInformation sphere = sphereSDF(warpedPos, vec3(-5.0, -10.0, 40.0), 20.0);\n  sphere.material_id = 3;\n  return sphere;\n}\n\nSdfInformation cloudSdf(vec3 queryPos, vec3 center, float stretch) {\n  vec3 warpedCoords = queryPos;\n  warpedCoords.x /= stretch;\n  warpedCoords.x = warpedCoords.x + fbm(queryPos.x, queryPos.y, queryPos.z, 0.08, 5.0, 2, 0.5);\n  warpedCoords.y = warpedCoords.y + fbm(queryPos.x, queryPos.y, queryPos.z, 0.1, 3.0, 2, 0.5);\n\n  SdfInformation sphere1 = sphereSDF(warpedCoords, center - vec3(2.0, 0.0, 0.0), 5.0);\n  SdfInformation sphere2 = sphereSDF(warpedCoords, center - vec3(7.0, 1.0, 0.0), 2.5);\n  SdfInformation sphere3 = sphereSDF(warpedCoords, center + vec3(4.0, -3.0, 0.0), 4.0);\n  SdfInformation sphere4 = sphereSDF(warpedCoords, center + vec3(9.0, 0.0, 0.0), 6.0);\n  SdfInformation sphere5 = sphereSDF(warpedCoords, center + vec3(17.0, -1.0, 0.0), 4.0);\n  SdfInformation sphere6 = sphereSDF(warpedCoords, center + vec3(13.0, 3.0, 0.0), 5.0);\n  SdfInformation sphere7 = sphereSDF(warpedCoords, center + vec3(4.0, 5.0, 0.0), 6.0);\n  SdfInformation sphere8 = sphereSDF(warpedCoords, center + vec3(21.0, -1.0, 0.0), 2.0);\n\n  SdfInformation union1 = smoothUnion(sphere1, sphere2, 1.0);\n  SdfInformation union2 = smoothUnion(sphere3, sphere4, 1.0);\n  SdfInformation union3 = smoothUnion(sphere5, sphere6, 1.0);\n  SdfInformation union4 = smoothUnion(sphere7, sphere8, 1.0);\n\n  SdfInformation unionA = smoothUnion(union1, union2, 1.0);\n  SdfInformation unionB = smoothUnion(union3, union4, 1.0);\n\n  SdfInformation finalClouds = smoothUnion(unionA, unionB, 1.0);\n  finalClouds.material_id = 4;\n  return finalClouds;\n}\n\nSdfInformation lighthouseSdf(vec3 queryPos) {\n  vec3 mainBodyPos = queryPos - vec3(-35.0, 16.0, 100.0);\n  SdfInformation mainBody = cappedConeSDF(mainBodyPos, 8.0, 4.0, 2.8);\n  mainBody.material_id = 5;\n\n  vec3 balconyPos = queryPos - vec3(-35.0, 23.0, 100.0);\n  SdfInformation balcony = torusSDF(balconyPos, vec2(3.0, 1.0));\n  balcony.material_id = 6;\n\n  SdfInformation window = capsuleSDF(queryPos, vec3(-35.0, 22.0, 100.0), vec3(-35.0, 26.0, 100.0), 2.5);\n  window.material_id = 7;\n\n  vec3 capPos = queryPos - vec3(-35.0, 29.0, 100.0);\n  SdfInformation cap = cappedConeSDF(capPos, 2.0, 4.0, 0.5);\n  cap.material_id = 8;\n\n  vec3 ballPos = queryPos - vec3(-35.0, 31.0, 100.0);\n  SdfInformation ball = torusSDF(ballPos, vec2(0.2, 0.6));\n  ball.material_id = 9;\n\n  SdfInformation lighthouse = smoothUnion(mainBody, balcony, 0.0);\n  lighthouse = smoothUnion(lighthouse, window, 0.0);\n  lighthouse = smoothUnion(lighthouse, cap, 0.0);\n  lighthouse = smoothUnion(lighthouse, ball, 0.0);\n\n  return lighthouse;\n}\n\nSdfInformation sceneSDF(vec3 queryPos) \n{\n  SdfInformation land = landSdf(queryPos);\n  float waterHeight = sin(u_Time / 1000.0) - 1.0; // overall tide goes in and out\n  float smallWaveOffset = sin(u_Time / 20.0) - 1.0;\n  waterHeight += 0.3 * smallWaveOffset;\n  waterHeight += 0.1 * sin(u_Time / 10.0); // gives small wave motion\n  SdfInformation water = ghibliWaterSDF(queryPos, waterHeight);\n\n  SdfInformation wave = waveSDF(queryPos, 41.0);\n\n  float cloudOffset = mod((u_Time / 10.0 + 350.0), 600.0) - 350.0;\n  float smoothAmt = 0.5;\n  SdfInformation cloud1 = cloudSdf(queryPos, vec3(-80.0 + cloudOffset, 40.0, 150.0), 1.2);\n  SdfInformation cloud2 = cloudSdf(queryPos, vec3(-50.0 + cloudOffset, 50.0, 250.0), 1.0);\n  SdfInformation cloud3 = cloudSdf(queryPos, vec3(0.0 + cloudOffset, 50.0, 180.0), 1.0);\n  SdfInformation cloud4 = cloudSdf(queryPos, vec3(50.0 + cloudOffset, 40.0, 150.0), 1.0);\n  SdfInformation cloud5 = cloudSdf(queryPos, vec3(140.0 + cloudOffset, 60.0, 250.0), 1.0);\n\n  SdfInformation clouds = smoothUnion(cloud1, cloud2, smoothAmt);\n  clouds = smoothUnion(clouds, cloud3, smoothAmt);\n  clouds = smoothUnion(clouds, cloud4, 0.0);\n  clouds = smoothUnion(clouds, cloud5, 0.0);\n\n  SdfInformation lighthouse = lighthouseSdf(queryPos);\n\n  SdfInformation scene = smoothUnion(land, lighthouse, smoothAmt);\n  scene = smoothUnion(scene, clouds, smoothAmt);\n  scene = smoothUnion(scene, wave, smoothAmt);\n  scene = smoothUnion(scene, water, smoothAmt);\n\n  return scene;\n}\n\n// converts uv coordinate to ray\nRay getRay(vec2 uv) {\n    Ray ray;\n\n    float camSpeed = 0.0;\n\n    vec3 movingEye = EYE + vec3(0.0, 0.0, -u_Time * camSpeed);\n    vec3 movingRef = REF + vec3(0.0, 0.0, -u_Time * camSpeed);\n\n    float len = tan(3.14159 * 0.125) * distance(movingEye, movingRef);\n    vec3 H = normalize(cross(vec3(0.0, 1.0, 0.0), movingRef - movingEye));\n    vec3 V = normalize(cross(H, movingEye - movingRef));\n    V *= len;\n    H *= len * u_Dimensions.x / u_Dimensions.y;\n    vec3 p = movingRef + uv.x * H + uv.y * V;\n    vec3 dir = normalize(p - movingEye);\n    \n    ray.origin = movingEye;\n    ray.direction = dir;\n    return ray;\n}\n\n// raymarches for uv coordinate and returns intersection\nIntersection getRaymarchedIntersection(vec2 uv)\n{\n    Ray ray = getRay(uv);\n    Intersection intersection;\n    \n    vec3 queryPoint = ray.origin;\n    for (int i=0; i < MAX_RAY_STEPS; ++i)\n    {\n        SdfInformation sdfInformation = sceneSDF(queryPoint);\n        float distanceToSurface = sdfInformation.distance;\n        \n        if (distanceToSurface < EPSILON)\n        {\n            \n            intersection.position = queryPoint;\n            intersection.normal = vec3(0.0, 0.0, 1.0);\n            intersection.distance = length(queryPoint - ray.origin);\n            intersection.material_id = sdfInformation.material_id;\n            \n            return intersection;\n        }\n        \n        // move along ray drxn by amt returned from sdf (sphere tracing)\n        float incrAmt = max(distanceToSurface, 0.0);\n        queryPoint = queryPoint + ray.direction * incrAmt;\n\n        // break if max distance reached\n        if(length(queryPoint - ray.origin) > 300.0) {\n          break;\n        }\n    }\n    \n    intersection.distance = -1.0;\n    return intersection;\n}\n\nvec3 estimateNormal(vec3 p) {\n    return normalize(vec3(\n        sceneSDF(vec3(p.x + EPSILON, p.y, p.z)).distance - sceneSDF(vec3(p.x - EPSILON, p.y, p.z)).distance,\n        sceneSDF(vec3(p.x, p.y + EPSILON, p.z)).distance - sceneSDF(vec3(p.x, p.y - EPSILON, p.z)).distance,\n        sceneSDF(vec3(p.x, p.y, p.z  + EPSILON)).distance - sceneSDF(vec3(p.x, p.y, p.z - EPSILON)).distance\n    ));\n}\n\nvec3 mixDayNightColor(vec3 dayColor, vec3 nightColor, float time) {\n  // time is given is -1 to 1 range, remap to 0.0 to 1.0 for mix\n  time = remap(time, -1.0, 1.0, 0.0, 1.0);\n  return mix(dayColor, nightColor, time);\n}\n\nvec3 getBackgroundColor(vec2 uv, float time) {\n  // sky background\n  vec3 topColor = mixDayNightColor(vec3(0.1, 0.7, 0.9), vec3(0.02, 0.05, 0.15), time);\n  vec3 bottomColor = mixDayNightColor(vec3(0.8, 0.95, 1.0), vec3(0.05, 0.2, 0.6), time);\n  float mixAmount = clamp(uv.y+ fbm(0.0, uv.x, uv.y, 10.0, 0.2, 4, 0.4), 0.0, 1.0);\n  mixAmount = getBias(mixAmount, 0.7);\n  float numSkyColors = 10.0;\n  mixAmount = floor(mixAmount * numSkyColors) / numSkyColors;\n  vec3 color = mix(bottomColor, topColor, mixAmount);\n\n  // help cover artifacts in ocean\n  if(uv.y < 0.0) {\n    color = mixDayNightColor(vec3(0.14, 0.4, 0.85), vec3(0.03, 0.15, 0.45), time);\n  }\n  return color;\n}\nvec3 cloudMaterial(vec3 normal, vec3 lightDir, float time) {\n  vec3 returnColor = vec3(0.0);\n\n  float facingLight = max(0.0, dot(normal, lightDir));\n  float facingCam = max(0.0, dot(normal, vec3(0.0, 0.0, -1.0)));\n\n  // main toon shading effect\n  if(facingLight < 0.05) {\n    returnColor += mixDayNightColor(vec3(0.4, 0.6, 0.8), vec3(0.2, 0.4, 0.7), time);\n  } else if(facingLight < 0.5) {\n    returnColor += mixDayNightColor(vec3(0.5, 0.7, 0.9), vec3(0.3, 0.5, 0.8), time);\n  } else {\n    returnColor += mixDayNightColor(vec3(0.6, 0.8, 1.0), vec3(0.4, 0.6, 0.9), time);\n  }\n\n  // slight outline overlay\n  if(facingCam < 0.8) {\n    returnColor += 0.025 * mixDayNightColor(vec3(0.7, 0.9, 1.0), vec3(0.5, 0.7, 0.9), time);\n  }\n\n  return returnColor;\n}\nvec3 hillMaterial(vec3 normal, vec3 lightDir, vec3 pos, float time) {\n  vec3 returnColor = vec3(0.0);\n\n  float facingLight = max(0.0, dot(normal, lightDir));\n  float facingCam = max(0.0, dot(normal, vec3(0.0, 0.0, -1.0)));\n\n  float noisyPosSand = pos.y + fbm(pos.x, pos.y, pos.z, 0.15, 2.5, 1, 0.5);\n\n  float noisyPosDirt = pos.y + fbm(pos.x, pos.y, pos.z, 0.15, 2.5, 1, 0.5);\n  noisyPosDirt += fbm(pos.x, pos.y, pos.z, 0.65, 5.0, 1, 0.5);\n\n  if(noisyPosSand < 0.0){\n    // sand\n    if(facingCam < 0.6) {\n      returnColor += mixDayNightColor(vec3(0.9, 0.7, 0.4),vec3(0.5, 0.3, 0.28), time);\n    } else {\n      returnColor += mixDayNightColor(vec3(0.8, 0.6, 0.3), vec3(0.43, 0.25, 0.2), time);\n    } \n    if(facingLight > 0.6) {\n      returnColor += 0.05 * mixDayNightColor(vec3(0.9, 0.8, 0.4), vec3(0.7, 0.6, 0.3), time);\n    }\n  } else if(noisyPosDirt < 8.0) {\n    // dirt\n    if(facingLight < 0.65) {\n      returnColor += mixDayNightColor(vec3(0.38, 0.15, 0.05), vec3(0.2, 0.1, 0.1), time);\n    } else {\n      returnColor += mixDayNightColor(vec3(0.4, 0.2, 0.1), vec3(0.25, 0.13, 0.1), time);\n    } \n\n    if(facingCam < 0.2 || facingLight > 0.8) {\n      returnColor += 0.2 * mixDayNightColor(vec3(0.5, 0.3, 0.2), vec3(0.4, 0.2, 0.2), time);\n    }\n  } else {\n    // grass\n    returnColor += mixDayNightColor(vec3(0.3, 0.5, 0.2), vec3(0.05, 0.2, 0.15), time);\n\n    if(facingCam < 0.2) {\n      returnColor += 0.2 * mixDayNightColor(vec3(0.3, 0.4, 0.3), vec3(0.1, 0.2, 0.25), time);\n    }\n  }\n\n  return returnColor;\n}\nvec3 waterMaterial(int material_id, vec3 pos, float time) {\n  vec3 waterColor = vec3(0.0);\n\n  if(material_id == 0) {\n    // water dark\n    waterColor += mixDayNightColor(vec3(0.14, 0.4, 0.85), vec3(0.03, 0.15, 0.45), time);\n  } else if (material_id == 1) {\n    // water light\n    waterColor += mixDayNightColor(vec3(0.2, 0.6, 0.9), vec3(0.05, 0.25, 0.5), time);\n  } else if (material_id == 2) {\n    // water spec\n    waterColor += mixDayNightColor(vec3(0.45, 0.85, 1.0), vec3(0.1, 0.4, 0.6), time);\n  }\n\n  SdfInformation landSdf = landLargeProxySdf(pos);\n\n  float smallWaveOffset = (sin(u_Time / 20.0) + 1.0) / 2.0;\n\n  vec3 foamColor = mixDayNightColor(vec3(0.8, 0.8, 0.9), vec3(0.6, 0.6, 0.7), time);\n  if(landSdf.distance < -1.0) {\n    waterColor += smallWaveOffset * 0.6 * foamColor;\n  } else if (landSdf.distance < -0.5) {\n    waterColor += smallWaveOffset * 0.4 * foamColor;\n  } else if (landSdf.distance < 0.4 && (pos.z > 90.0 || pos.x < -30.0)) {\n    waterColor += smallWaveOffset * 0.6 * foamColor;\n  }\n\n  return waterColor;\n}\nvec3 lighthouseMaterial(int material_id, vec3 pos, vec3 normal, vec3 lightDir, vec2 uv, float time) {\n  vec3 returnColor = vec3(0.0);\n  float facingLight = max(0.0, dot(normal, lightDir));\n\n  vec3 red = vec3(0.0);\n  vec3 white = vec3(0.0);\n  vec3 blue = vec3(0.0);\n\n  if (facingLight < 0.3) {\n    red = mixDayNightColor(vec3(0.9, 0.05, 0.05), vec3(0.6, 0.05, 0.08), time);\n    white = mixDayNightColor(vec3(0.8, 0.8, 0.9), vec3(0.55, 0.55, 0.7), time);\n    blue = mixDayNightColor(vec3(0.01, 0.03, 0.07), vec3(0.01, 0.01, 0.03), time);\n  }  else if (facingLight < 0.7) {\n    red = mixDayNightColor(vec3(1.0, 0.1, 0.1), vec3(0.65, 0.1, 0.1), time);\n    white = mixDayNightColor(vec3(0.9, 0.9, 0.95), vec3(0.6, 0.6, 0.75), time);\n    blue = mixDayNightColor(vec3(0.04, 0.06, 0.1), vec3(0.02, 0.03, 0.05), time);\n  } else {\n    red = mixDayNightColor(vec3(1.0, 0.25, 0.2), vec3(0.7, 0.12, 0.15), time);\n    white = mixDayNightColor(vec3(1.0, 0.95, 0.95), vec3(0.8, 0.75, 0.75), time);\n    blue = mixDayNightColor(vec3(0.1, 0.14, 0.25), vec3(0.05, 0.05, 0.1), time);\n  }\n\n  if(material_id == 5){\n    // 5 = mainbody\n    float stripe = sin(pos.y * 1.1 + 3.0);\n    if(stripe > 0.0) {\n      returnColor = red;\n    } else {\n      returnColor = white;\n    }\n  } else if (material_id == 6) {\n    // 6 = balcony\n    returnColor = blue;\n  } else if (material_id == 7) {\n    // 7 = window\n    if(pos.y < 24.5 || pos.y > 26.5 || pos.x < -36.0 || pos.x > -32.7 || ( pos.x < -33.5 && pos.x > -34.5)) {\n      returnColor = white;\n    } else {\n      returnColor = getBackgroundColor(uv, time);\n    }\n  } else if (material_id == 8) {\n    // 8 == top cone\n    returnColor = red;\n  } else if (material_id == 9) {\n    // 9 == top ball\n    returnColor = white;\n  }\n\n  return returnColor;\n}\nvec3 getMaterialColor(int material_id, vec3 normal, vec3 lightDir, vec3 pos, vec2 uv, float time) {\n  if(material_id <= 2 && material_id >= 0) {\n    return waterMaterial(material_id, pos, time);\n  } else if (material_id == 3) {\n    // ground\n    return hillMaterial(normal, lightDir, pos, time);\n  } else if (material_id == 4) {\n    // cloud\n    return cloudMaterial(normal, lightDir, time);\n  } else if(material_id >= 5 && material_id <= 9) {\n    // lighthouse\n    return lighthouseMaterial(material_id, pos, normal, lightDir, uv, time);\n  } else {\n    return vec3(1.0, 0.0, 1.0);\n  }\n}\nvec3 getSceneColor(vec2 uv)\n{\n    Intersection intersection = getRaymarchedIntersection(uv);\n    // sunTime > 0.0 = night, sunTime < 0.0 = day\n    float sunTime = -cos(u_Time / 100.0);\n    float lightDrxnX = remap(sunTime, -1.0, 1.0, -10.0, 10.0);\n    float lightDrxnZ = remap(sunTime, -1.0, 1.0, -10.0, 10.0);\n\n    DirectionalLight light = DirectionalLight(normalize(vec3(lightDrxnX, 12.0, lightDrxnZ)),\n                                 SUN_KEY_LIGHT);\n    \n    vec3 color = vec3(0.0);\n\n    if (intersection.distance > 0.0)\n    { \n        // shading\n        vec3 n = estimateNormal(intersection.position);\n        color = getMaterialColor(intersection.material_id, n, light.dir, intersection.position, uv, sunTime);\n        \n        // clouds are transparent\n        if(intersection.material_id == 4) {\n          color *= 0.8;\n          color += 0.4 * getBackgroundColor(uv, sunTime);\n        }\n    }\n    else\n    {\n        // sky background\n        color = getBackgroundColor(uv, sunTime);\n    }\n    // gamma correction\n    color = pow(color, vec3(1. / 2.2));\n    return color;\n}\n\nvoid main() {\n  // define scene ()\n  // call raymarch function\n\n  // Normalized pixel coordinates (from 0 to 1)\n  vec2 uv = fs_Pos;\n\n  // Time varying pixel color\n  vec3 col = getSceneColor(uv);\n\n  // Output to screen\n  out_Col = vec4(col,1.0);\n}"},538:t=>{t.exports="#version 300 es\nprecision highp float;\n\n// The vertex shader used to render the background of the scene\n\nin vec4 vs_Pos;\nout vec2 fs_Pos;\n\nvoid main() {\n  fs_Pos = vs_Pos.xy;\n  gl_Position = vs_Pos;\n}\n"}},e={};function n(i){var r=e[i];if(void 0!==r)return r.exports;var o=e[i]={exports:{}};return t[i](o,o.exports,n),o.exports}n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{"use strict";var t,e,i=1e-6,r="undefined"!=typeof Float32Array?Float32Array:Array;function o(){var t=new r(3);return r!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t}function a(t,e,n){var i=new r(3);return i[0]=t,i[1]=e,i[2]=n,i}function s(t,e,n){return t[0]=e[0]+n[0],t[1]=e[1]+n[1],t[2]=e[2]+n[2],t}function c(e){t=e}Math.random,Math.PI,Math.hypot||(Math.hypot=function(){for(var t=0,e=arguments.length;e--;)t+=arguments[e]*arguments[e];return Math.sqrt(t)}),o(),e=new r(4),r!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0,e[3]=0);const u=class{constructor(t){this.canvas=t}setClearColor(e,n,i,r){t.clearColor(e,n,i,r)}setSize(t,e){this.canvas.width=t,this.canvas.height=e}clear(){t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT)}render(t,e,n,i){e.setEyeRefUp(t.controls.eye,t.controls.center,t.controls.up),e.setTime(i);for(let t of n)e.draw(t)}};function h(){var t=new r(16);return r!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t}function d(t,e,n,r){var o,a,s,c,u,h,d,f,l,m,v=e[0],p=e[1],g=e[2],y=r[0],x=r[1],w=r[2],M=n[0],_=n[1],S=n[2];return Math.abs(v-M)<i&&Math.abs(p-_)<i&&Math.abs(g-S)<i?function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}(t):(d=v-M,f=p-_,l=g-S,o=x*(l*=m=1/Math.hypot(d,f,l))-w*(f*=m),a=w*(d*=m)-y*l,s=y*f-x*d,(m=Math.hypot(o,a,s))?(o*=m=1/m,a*=m,s*=m):(o=0,a=0,s=0),c=f*s-l*a,u=l*o-d*s,h=d*a-f*o,(m=Math.hypot(c,u,h))?(c*=m=1/m,u*=m,h*=m):(c=0,u=0,h=0),t[0]=o,t[1]=c,t[2]=d,t[3]=0,t[4]=a,t[5]=u,t[6]=f,t[7]=0,t[8]=s,t[9]=h,t[10]=l,t[11]=0,t[12]=-(o*v+a*p+s*g),t[13]=-(c*v+u*p+h*g),t[14]=-(d*v+f*p+l*g),t[15]=1,t)}var f=n(478);var l=null;class m{constructor(e,n){if(this.shader=t.createShader(e),t.shaderSource(this.shader,n),t.compileShader(this.shader),!t.getShaderParameter(this.shader,t.COMPILE_STATUS))throw t.getShaderInfoLog(this.shader)}}const v=class{constructor(e){this.prog=t.createProgram();for(let n of e)t.attachShader(this.prog,n.shader);if(t.linkProgram(this.prog),!t.getProgramParameter(this.prog,t.LINK_STATUS))throw t.getProgramInfoLog(this.prog);this.attrPos=t.getAttribLocation(this.prog,"vs_Pos"),this.unifEye=t.getUniformLocation(this.prog,"u_Eye"),this.unifRef=t.getUniformLocation(this.prog,"u_Ref"),this.unifUp=t.getUniformLocation(this.prog,"u_Up"),this.unifDimensions=t.getUniformLocation(this.prog,"u_Dimensions"),this.unifTime=t.getUniformLocation(this.prog,"u_Time")}use(){l!==this.prog&&(t.useProgram(this.prog),l=this.prog)}setEyeRefUp(e,n,i){this.use(),-1!==this.unifEye&&t.uniform3f(this.unifEye,e[0],e[1],e[2]),-1!==this.unifRef&&t.uniform3f(this.unifRef,n[0],n[1],n[2]),-1!==this.unifUp&&t.uniform3f(this.unifUp,i[0],i[1],i[2])}setDimensions(e,n){this.use(),-1!==this.unifDimensions&&t.uniform2f(this.unifDimensions,e,n)}setTime(e){this.use(),-1!==this.unifTime&&t.uniform1f(this.unifTime,e)}draw(e){this.use(),-1!=this.attrPos&&e.bindPos()&&(t.enableVertexAttribArray(this.attrPos),t.vertexAttribPointer(this.attrPos,4,t.FLOAT,!1,0,0)),e.bindIdx(),t.drawElements(e.drawMode(),e.elemCount(),t.UNSIGNED_INT,0),-1!=this.attrPos&&t.disableVertexAttribArray(this.attrPos)}};let p,g=0;function y(){p=new class extends class{constructor(){this.count=0,this.idxBound=!1,this.posBound=!1}destory(){t.deleteBuffer(this.bufIdx),t.deleteBuffer(this.bufPos)}generateIdx(){this.idxBound=!0,this.bufIdx=t.createBuffer()}generatePos(){this.posBound=!0,this.bufPos=t.createBuffer()}bindIdx(){return this.idxBound&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.bufIdx),this.idxBound}bindPos(){return this.posBound&&t.bindBuffer(t.ARRAY_BUFFER,this.bufPos),this.posBound}elemCount(){return this.count}drawMode(){return t.TRIANGLES}}{constructor(t){var e,n,i,o;super(),this.center=(e=t[0],n=t[1],i=t[2],(o=new r(4))[0]=e,o[1]=n,o[2]=i,o[3]=1,o)}create(){this.indices=new Uint32Array([0,1,2,0,2,3]),this.positions=new Float32Array([-1,-1,.999,1,1,-1,.999,1,1,1,.999,1,-1,1,.999,1]),this.generateIdx(),this.generatePos(),this.count=this.indices.length,t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.bufIdx),t.bufferData(t.ELEMENT_ARRAY_BUFFER,this.indices,t.STATIC_DRAW),t.bindBuffer(t.ARRAY_BUFFER,this.bufPos),t.bufferData(t.ARRAY_BUFFER,this.positions,t.STATIC_DRAW),console.log("Created square")}}(a(0,0,0)),p.create()}!function(){window.addEventListener("keypress",(function(t){t.key}),!1),window.addEventListener("keyup",(function(t){t.key}),!1);const t=document.getElementById("canvas"),e=t.getContext("webgl2");e||alert("WebGL 2 not supported!"),c(e),y();const i=new class{constructor(t,e){this.projectionMatrix=h(),this.viewMatrix=h(),this.fovy=45,this.aspectRatio=1,this.near=.1,this.far=1e3,this.position=o(),this.direction=o(),this.target=o(),this.up=o(),this.controls=f(document.getElementById("canvas"),{eye:t,center:e}),s(this.target,this.position,this.direction),d(this.viewMatrix,this.controls.eye,this.controls.center,this.controls.up)}setAspectRatio(t){this.aspectRatio=t}updateProjectionMatrix(){var t,e,n,i,r,o,a;t=this.projectionMatrix,e=this.fovy,n=this.aspectRatio,i=this.near,r=this.far,a=1/Math.tan(e/2),t[0]=a/n,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=a,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=r&&r!==1/0?(o=1/(i-r),t[10]=(r+i)*o,t[14]=2*r*i*o):(t[10]=-1,t[14]=-2*i)}update(){this.controls.tick(),s(this.target,this.position,this.direction),d(this.viewMatrix,this.controls.eye,this.controls.center,this.controls.up)}}(a(0,0,-10),a(0,0,0)),r=new u(t);r.setClearColor(164/255,233/255,1,1),e.enable(e.DEPTH_TEST);const l=new v([new m(e.VERTEX_SHADER,n(538)),new m(e.FRAGMENT_SHADER,n(779))]);window.addEventListener("resize",(function(){r.setSize(window.innerWidth,window.innerHeight),i.setAspectRatio(window.innerWidth/window.innerHeight),i.updateProjectionMatrix(),l.setDimensions(window.innerWidth,window.innerHeight)}),!1),r.setSize(window.innerWidth,window.innerHeight),i.setAspectRatio(window.innerWidth/window.innerHeight),i.updateProjectionMatrix(),l.setDimensions(window.innerWidth,window.innerHeight),function t(){i.update(),e.viewport(0,0,window.innerWidth,window.innerHeight),r.clear(),r.render(i,l,[p],g),g++,requestAnimationFrame(t)}()}()})()})();
//# sourceMappingURL=bundle.js.map